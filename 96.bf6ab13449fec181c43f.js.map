{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-textarea-ios.entry.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Textarea","tslib__WEBPACK_IMPORTED_MODULE_0__","_core_5ba38749_js__WEBPACK_IMPORTED_MODULE_1__","_theme_353a032e_js__WEBPACK_IMPORTED_MODULE_3__","_helpers_c90aaa66_js__WEBPACK_IMPORTED_MODULE_4__","class_1","hostRef","_this","this","Object","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","getValue","runAutoGrow","connectedCallback","el","dispatchEvent","CustomEvent","detail","disconnectedCallback","document","componentDidLoad","style","height","scrollHeight","setFocus","_a","focus","getInputElement","Promise","resolve","interactive","textarea","input","interactive-disabled","has-placeholder","placeholder","has-value","hasValue","has-focus","render","mode","labelId","label","id","aria-disabled","class","assign","color","ref","autoCapitalize","autoFocus","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap","defineProperty","get","enumerable","configurable"],"mappings":"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","file":"96.bf6ab13449fec181c43f.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, f as readTask, d as getIonMode, h, H as Host, e as getElement } from './core-5ba38749.js';\nimport './config-6ccf652f.js';\nimport { c as createColorClasses } from './theme-353a032e.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-c90aaa66.js';\nvar Textarea = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-input-\" + textareaIds++;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = function (ev) {\n            if (_this.nativeInput) {\n                _this.value = _this.nativeInput.value;\n            }\n            _this.emitStyle();\n            _this.ionInput.emit(ev);\n        };\n        this.onFocus = function () {\n            _this.hasFocus = true;\n            _this.focusChange();\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.hasFocus = false;\n            _this.focusChange();\n            _this.ionBlur.emit();\n        };\n        this.onKeyDown = function () {\n            _this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    class_1.prototype.debounceChanged = function () {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    /**\n     * Update the native input element when the value changes\n     */\n    class_1.prototype.valueChanged = function () {\n        var nativeInput = this.nativeInput;\n        var value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value: value });\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.componentDidLoad = function () {\n        this.runAutoGrow();\n    };\n    // TODO: performance hit, this cause layout thrashing\n    class_1.prototype.runAutoGrow = function () {\n        var nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(function () {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    };\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    class_1.prototype.setFocus = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.focus();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    class_1.prototype.getInputElement = function () {\n        return Promise.resolve(this.nativeInput);\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    };\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    class_1.prototype.checkClearOnEdit = function () {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    };\n    class_1.prototype.focusChange = function () {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    };\n    class_1.prototype.hasValue = function () {\n        return this.getValue() !== '';\n    };\n    class_1.prototype.getValue = function () {\n        return this.value || '';\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var mode = getIonMode(this);\n        var value = this.getValue();\n        var labelId = this.inputId + '-lbl';\n        var label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a)) }, h(\"textarea\", { class: \"native-textarea\", ref: function (el) { return _this.nativeInput = el; }, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"debounce\": [\"debounceChanged\"],\n                \"disabled\": [\"disabledChanged\"],\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h, ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-textarea-ios-h, .item-label-floating .sc-ion-textarea-ios-h, .item-label-stacked.sc-ion-textarea-ios-h, .item-label-stacked .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar textareaIds = 0;\nexport { Textarea as ion_textarea };\n"],"sourceRoot":""}