{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-nav_5.entry.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Nav","NavLink","NavPop","NavPush","NavSetRoot","tslib__WEBPACK_IMPORTED_MODULE_0__","_core_5ba38749_js__WEBPACK_IMPORTED_MODULE_1__","_config_6ccf652f_js__WEBPACK_IMPORTED_MODULE_2__","_constants_94c4865f_js__WEBPACK_IMPORTED_MODULE_3__","_helpers_c90aaa66_js__WEBPACK_IMPORTED_MODULE_4__","_framework_delegate_00265c49_js__WEBPACK_IMPORTED_MODULE_5__","_index_84f27767_js__WEBPACK_IMPORTED_MODULE_6__","_cubic_bezier_90d0df24_js__WEBPACK_IMPORTED_MODULE_7__","VIEW_STATE_NEW","ViewController","component","params","this","state","prototype","init","container","_a","_b","label","element","Object","delegate","sent","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","keys","keysB","length","_i","keysA_1","key","convertToView","page","class_1","hostRef","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","ionNavWillLoad","ionNavWillChange","ionNavDidChange","swipeGestureChanged","gesture","setDisabled","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","componentDidLoad","e","then","bind","createSwipeBackGesture","canStart","onStart","onMove","onEnd","componentDidUnload","destroy","push","componentProps","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","resolve","_this","active","getActiveSync","Promise","changed","finish","promise","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","v","assign","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","skipIfBusy","reject","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","router","navChanged","failed","rejectReason","shift","runTransition","rejectReason_1","trys","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","transition","viewsLength","viewControllers","map","filter","viewControllers_1","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViews_1","insertViewAt","destroyQueue_1","destroyQueue_2","destroyView","progressCallback","leavingEl","animationOpts","progressAnimation","ani","sbAni","showGoBack","baseEl","animationBuilder","animation","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","render","defineProperty","enumerable","configurable","navLink","routerDirection","class_2","onClick","class_3","class_4","class_5"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,iCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAAN,EAAAG,EAAAD,EAAA,iCAAAK,IAAAP,EAAAG,EAAAD,EAAA,qCAAAM,IAAA,IAAAC,EAAAT,EAAA,QAAAU,EAAAV,EAAA,QAAAW,EAAAX,EAAA,QAAAY,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QAAAc,EAAAd,EAAA,QAAAe,EAAAf,EAAA,QAAAgB,EAAAhB,EAAA,QAQIiB,EAAiB,EAGjBC,EAAgC,WAChC,SAASA,EAAeC,EAAWC,GAC/BC,KAAKF,UAAYA,EACjBE,KAAKD,OAASA,EACdC,KAAKC,MAAQL,EAsCjB,OApCAC,EAAeK,UAAUC,KAAO,SAAUC,GACtC,OAAOhB,EAAA,UAAkBY,UAAM,OAAQ,EAAQ,WAC3C,IAAIF,EAAWO,EACf,OAAOjB,EAAA,YAAoBY,KAAM,SAAUM,GACvC,OAAQA,EAAGC,OACP,KAAK,EAED,OADAP,KAAKC,MAdH,EAeID,KAAKQ,QAAgB,CAAC,EAAa,IACzCV,EAAYE,KAAKF,UACjBO,EAAKL,KACE,CAAC,EAAaS,OAAAhB,EAAA,EAAAgB,CAAgBT,KAAKU,SAAUN,EAAWN,EAAW,CAAC,WAAY,sBAAuBE,KAAKD,UACvH,KAAK,EACDM,EAAGG,QAAUF,EAAGK,OAChBL,EAAGC,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,SAQhCV,EAAeK,UAAUU,SAAW,WAChCH,OAAAjB,EAAA,EAAAiB,CA9BmB,IA8BZT,KAAKC,MAAgC,+BAC5C,IAAIO,EAAUR,KAAKQ,QACfA,IACIR,KAAKU,SACLV,KAAKU,SAASG,kBAAkBL,EAAQM,cAAeN,GAGvDA,EAAQO,UAGhBf,KAAKgB,SAAMC,EACXjB,KAAKC,MAzCc,GA2ChBJ,EA1CwB,GA4C/BqB,EAAU,SAAUC,EAAMC,EAAIrB,GAC9B,IAAKoB,EACD,OAAO,EAEX,GAAIA,EAAKrB,YAAcsB,EACnB,OAAO,EAEX,IAAIC,EAAgBF,EAAKpB,OACzB,GAAIsB,IAAkBtB,EAClB,OAAO,EAEX,IAAKsB,IAAkBtB,EACnB,OAAO,EAEX,IAAKsB,IAAkBtB,EACnB,OAAO,EAEX,IAAIuB,EAAQb,OAAOc,KAAKF,GACpBG,EAAQf,OAAOc,KAAKxB,GACxB,GAAIuB,EAAMG,SAAWD,EAAMC,OACvB,OAAO,EAGX,IAAK,IAAIC,EAAK,EAAGC,EAAUL,EAAOI,EAAKC,EAAQF,OAAQC,IAAM,CACzD,IAAIE,EAAMD,EAAQD,GAClB,GAAIL,EAAcO,KAAS7B,EAAO6B,GAC9B,OAAO,EAGf,OAAO,GAEPC,EAAgB,SAAUC,EAAM/B,GAChC,OAAK+B,EAGDA,aAAgBjC,EACTiC,EAEJ,IAAIjC,EAAeiC,EAAM/B,GALrB,MAkBXhB,EAAqB,WACrB,SAASgD,EAAQC,GACbvB,OAAApB,EAAA,EAAAoB,CAAiBT,KAAMgC,GACvBhC,KAAKiC,WAAa,GAClBjC,KAAKkC,kBAAmB,EACxBlC,KAAKmC,WAAY,EACjBnC,KAAKoC,iBAAkB,EACvBpC,KAAKqC,WAAY,EACjBrC,KAAKsC,MAAQ,GAIbtC,KAAKuC,UAAW,EAChBvC,KAAKwC,eAAiB/B,OAAApB,EAAA,EAAAoB,CAAYT,KAAM,iBAAkB,GAC1DA,KAAKyC,iBAAmBhC,OAAApB,EAAA,EAAAoB,CAAYT,KAAM,mBAAoB,GAC9DA,KAAK0C,gBAAkBjC,OAAApB,EAAA,EAAAoB,CAAYT,KAAM,kBAAmB,GAswBhE,OApwBA+B,EAAQ7B,UAAUyC,oBAAsB,WAChC3C,KAAK4C,SACL5C,KAAK4C,QAAQC,aAAkC,IAAtB7C,KAAK8C,eAGtCf,EAAQ7B,UAAU6C,YAAc,gBACV9B,IAAdjB,KAAKgD,OACAhD,KAAKmC,WACNnC,KAAKiD,QAAQjD,KAAKgD,KAAMhD,KAAKkD,cAIzCnB,EAAQ7B,UAAUiD,kBAAoB,WAIlC,GAHAnD,KAAKmC,YACCiB,SAASC,cAAc,gBACpBrD,KAAKsD,GAAGC,QAAQ,oBACCtC,IAAtBjB,KAAK8C,aAA4B,CACjC,IAAIU,EAAO/C,OAAApB,EAAA,EAAAoB,CAAWT,MACtBA,KAAK8C,aAAexD,EAAA,EAAOmE,WAAW,mBAA6B,QAATD,GAE9DxD,KAAKwC,eAAekB,QAExB3B,EAAQ7B,UAAUyD,iBAAmB,WACjC,OAAOvE,EAAA,UAAkBY,UAAM,OAAQ,EAAQ,WAC3C,IAAIK,EACJ,OAAOjB,EAAA,YAAoBY,KAAM,SAAUM,GACvC,OAAQA,EAAGC,OACP,KAAK,EAGD,OAFAP,KAAK+C,cACL1C,EAAKL,KACE,CAAC,EAAarB,EAAAiF,EAAA,GAAAC,KAAAlF,EAAAmF,KAAA,eACzB,KAAK,EAGD,OAFAzD,EAAGuC,QAAWtC,EAAGK,OAAQoD,uBAAuB/D,KAAKsD,GAAItD,KAAKgE,SAASF,KAAK9D,MAAOA,KAAKiE,QAAQH,KAAK9D,MAAOA,KAAKkE,OAAOJ,KAAK9D,MAAOA,KAAKmE,MAAML,KAAK9D,OACpJA,KAAK2C,sBACE,CAAC,SAK5BZ,EAAQ7B,UAAUkE,mBAAqB,WACnC,IAAK,IAAI1C,EAAK,EAAGrB,EAAKL,KAAKsC,MAAOZ,EAAKrB,EAAGoB,OAAQC,IAAM,CACpD,IAAIP,EAAOd,EAAGqB,GACdjB,OAAAf,EAAA,EAAAe,CAAUU,EAAKX,QAASjB,EAAA,GACxB4B,EAAKP,WAELZ,KAAK4C,UACL5C,KAAK4C,QAAQyB,UACbrE,KAAK4C,aAAU3B,GAGnBjB,KAAKiC,WAAWR,OAASzB,KAAKsC,MAAMb,OAAS,EAC7CzB,KAAKqC,WAAY,GAYrBN,EAAQ7B,UAAUoE,KAAO,SAAUxE,EAAWyE,EAAgBC,EAAMC,GAChE,OAAOzE,KAAK0E,UAAU,CAClBC,aAAc,EACdC,YAAa,CAAC,CAAE9C,KAAMhC,EAAWC,OAAQwE,IACzCC,KAAMA,GACPC,IAYP1C,EAAQ7B,UAAU2E,OAAS,SAAUC,EAAahF,EAAWyE,EAAgBC,EAAMC,GAC/E,OAAOzE,KAAK0E,UAAU,CAClBC,YAAaG,EACbF,YAAa,CAAC,CAAE9C,KAAMhC,EAAWC,OAAQwE,IACzCC,KAAMA,GACPC,IAYP1C,EAAQ7B,UAAU6E,YAAc,SAAUD,EAAaE,EAAkBR,EAAMC,GAC3E,OAAOzE,KAAK0E,UAAU,CAClBC,YAAaG,EACbF,YAAaI,EACbR,KAAMA,GACPC,IASP1C,EAAQ7B,UAAU+E,IAAM,SAAUT,EAAMC,GACpC,OAAOzE,KAAK0E,UAAU,CAClBQ,aAAc,EACdC,YAAa,EACbX,KAAMA,GACPC,IASP1C,EAAQ7B,UAAUkF,MAAQ,SAAUC,EAAiBb,EAAMC,GACvD,IAAIa,EAAW,CACXJ,aAAc,EACdC,aAAc,EACdX,KAAMA,GASV,MAP+B,iBAApBa,GAAgCA,EAAgBvF,WACvDwF,EAASC,WAAaF,EACtBC,EAASJ,YAAc,GAES,iBAApBG,IACZC,EAASJ,YAAcG,EAAkB,GAEtCrF,KAAK0E,UAAUY,EAAUb,IAQpC1C,EAAQ7B,UAAUsF,UAAY,SAAUhB,EAAMC,GAC1C,OAAOzE,KAAK0E,UAAU,CAClBQ,YAAa,EACbC,aAAc,EACdX,KAAMA,GACPC,IAUP1C,EAAQ7B,UAAUuF,YAAc,SAAUC,EAAYP,EAAaX,EAAMC,GAErE,YADoB,IAAhBU,IAA0BA,EAAc,GACrCnF,KAAK0E,UAAU,CAClBQ,YAAaQ,EACbP,YAAaA,EACbX,KAAMA,GACPC,IAUP1C,EAAQ7B,UAAU+C,QAAU,SAAUnD,EAAWyE,EAAgBC,EAAMC,GACnE,OAAOzE,KAAK2F,SAAS,CAAC,CAAE7D,KAAMhC,EAAWC,OAAQwE,IAAmBC,EAAMC,IAY9E1C,EAAQ7B,UAAUyF,SAAW,SAAUrD,EAAOkC,EAAMC,GAQhD,OAPY,MAARD,IACAA,EAAO,KAGW,IAAlBA,EAAKjC,WACLiC,EAAKjC,UAAW,GAEbvC,KAAK0E,UAAU,CAClBC,YAAa,EACbC,YAAatC,EACb4C,YAAa,EACbC,aAAc,EACdX,KAAMA,GACPC,IAGP1C,EAAQ7B,UAAU0F,WAAa,SAAUxE,EAAIrB,EAAQ8F,GACjD,IAQIC,EARAC,EAAQ/F,KACRgG,EAAShG,KAAKiG,gBAClB,GAAI/E,EAAQ8E,EAAQ5E,EAAIrB,GACpB,OAAOmG,QAAQJ,QAAQ,CACnBK,SAAS,EACT3F,QAASwF,EAAOxF,UAIxB,IACI4F,EADAC,EAAU,IAAIH,QAAQ,SAAUtH,GAAK,OAAQkH,EAAUlH,IAEvD0H,EAAa,CACbC,WAAW,EACXC,YAAa,SAAUC,GACnB,IAAIC,EACAC,EAAI,IAAIT,QAAQ,SAAUtH,GAAK,OAAQ8H,EAAO9H,IAiBlD,OAhBAkH,EAAQ,CACJK,SAAS,EACT3F,QAASiG,EACTG,YAAa,WAAc,OAAOxH,EAAA,UAAkB2G,OAAO,OAAQ,EAAQ,WACvE,OAAO3G,EAAA,YAAoBY,KAAM,SAAUK,GACvC,OAAQA,EAAGE,OACP,KAAK,EAED,OADAmG,IACO,CAAC,EAAaN,GACzB,KAAK,EAED,OADA/F,EAAGM,OACI,CAAC,WAKrBgG,IAGf,GAAkB,SAAdd,EACAO,EAASpG,KAAKiD,QAAQ7B,EAAIrB,EAAQuG,OAEjC,CACD,IAAIO,EAAiB7G,KAAKsC,MAAMwE,KAAK,SAAUC,GAAK,OAAO7F,EAAQ6F,EAAG3F,EAAIrB,KACtE8G,EACAT,EAASpG,KAAKoF,MAAMyB,EAAgBpG,OAAOuG,OAAO,GAAIV,EAAY,CAAET,UAAW,UAE5D,YAAdA,EACLO,EAASpG,KAAKsE,KAAKlD,EAAIrB,EAAQuG,GAEZ,SAAdT,IACLO,EAASpG,KAAKiD,QAAQ7B,EAAIrB,EAAQU,OAAOuG,OAAO,GAAIV,EAAY,CAAET,UAAW,OAAQtD,UAAU,MAGvG,OAAO8D,GAGXtE,EAAQ7B,UAAU+G,WAAa,WAC3B,OAAO7H,EAAA,UAAkBY,UAAM,OAAQ,EAAQ,WAC3C,IAAIgG,EACJ,OAAO5G,EAAA,YAAoBY,KAAM,SAAUK,GAEvC,MAAO,CAAC,GADR2F,EAAShG,KAAKiG,iBAEJ,CACE7E,GAAI4E,EAAOxF,QAAQ0G,QACnBnH,OAAQiG,EAAOjG,OACfS,QAASwF,EAAOxF,cAElBS,QAOtBc,EAAQ7B,UAAUiH,UAAY,WAC1B,OAAOjB,QAAQJ,QAAQ9F,KAAKiG,kBAOhClE,EAAQ7B,UAAUkH,WAAa,SAAUC,GACrC,OAAOnB,QAAQJ,QAAQ9F,KAAKsC,MAAM+E,KAOtCtF,EAAQ7B,UAAUoH,UAAY,SAAUnG,GACpC,OAAO+E,QAAQJ,QAAQ9F,KAAKuH,cAAcpG,KAO9CY,EAAQ7B,UAAUsH,YAAc,SAAUrG,GACtC,OAAO+E,QAAQJ,QAAQ9F,KAAKyH,gBAAgBtG,KAEhDY,EAAQ7B,UAAUwH,UAAY,WAC1B,OAAO1H,KAAKsC,MAAMb,QAEtBM,EAAQ7B,UAAU+F,cAAgB,WAC9B,OAAOjG,KAAKsC,MAAMtC,KAAKsC,MAAMb,OAAS,IAE1CM,EAAQ7B,UAAUqH,cAAgB,SAAUpG,GAExC,YADa,IAATA,IAAmBA,EAAOnB,KAAKiG,oBACzB9E,IAAQnB,KAAKyH,gBAAgBtG,KAE3CY,EAAQ7B,UAAUuH,gBAAkB,SAAUtG,GAE1C,QADa,IAATA,IAAmBA,EAAOnB,KAAKiG,iBAC9B9E,EAAL,CAGA,IAAImB,EAAQtC,KAAKsC,MACb+E,EAAQ/E,EAAMqF,QAAQxG,GAC1B,OAAOkG,EAAQ,EAAI/E,EAAM+E,EAAQ,QAAKpG,IAY1Cc,EAAQ7B,UAAUwE,UAAY,SAAUkD,EAAInD,GACxC,GAAIzE,KAAKoC,iBAA8B,MAAXwF,EAAGpD,MAAgBoD,EAAGpD,KAAKqD,WACnD,OAAO3B,QAAQJ,SAAQ,GAE3B,IAAIO,EAAU,IAAIH,QAAQ,SAAUJ,EAASgC,GACzCF,EAAG9B,QAAUA,EACb8B,EAAGE,OAASA,IAYhB,OAVAF,EAAGnD,KAAOA,EAENmD,EAAGhD,aAAyC,IAA1BgD,EAAGhD,YAAYnD,SACjCmG,EAAGhD,iBAAc3D,GAGrBjB,KAAKiC,WAAWqC,KAAKsD,GAGrB5H,KAAK+H,WACE1B,GAEXtE,EAAQ7B,UAAU8H,QAAU,SAAUC,EAAQL,GAC1C,GAAI5H,KAAKqC,UACLrC,KAAKkI,UAAU,+BAAgCN,QAOnD,GAJIA,EAAGnD,MACHmD,EAAGnD,KAAKwD,EAAOE,aAAcF,EAAOG,mBAAoBH,EAAOI,aAAcJ,EAAOK,YAAaL,EAAOpC,WAE5G+B,EAAG9B,QAAQmC,EAAOE,eACQ,IAAtBP,EAAGpD,KAAK+B,WAAuBvG,KAAKmC,UAAW,CAC/C,IAAIoG,EAASnF,SAASC,cAAc,cAChCkF,GAEAA,EAAOC,WAD8B,SAArBP,EAAOpC,UAAuB,OAAS,aAKnE9D,EAAQ7B,UAAUuI,OAAS,SAAUC,EAAcd,GAC3C5H,KAAKqC,UACLrC,KAAKkI,UAAU,+BAAgCN,IAGnD5H,KAAKiC,WAAWR,OAAS,EACzBzB,KAAKkI,UAAUQ,EAAcd,KAEjC7F,EAAQ7B,UAAUgI,UAAY,SAAUQ,EAAcd,GAC9CA,EAAGnD,MACHmD,EAAGnD,MAAK,GAAO,EAAOiE,GAEtBd,EAAGE,SAAW9H,KAAKqC,UACnBuF,EAAGE,OAAOY,GAGVd,EAAG9B,SAAQ,IAGnB/D,EAAQ7B,UAAU6H,SAAW,WAGzB,GAAI/H,KAAKoC,gBACL,OAAO,EAIX,IAAIwF,EAAK5H,KAAKiC,WAAW0G,QACzB,QAAKf,IAGL5H,KAAK4I,cAAchB,IACZ,IAEX7F,EAAQ7B,UAAU0I,cAAgB,SAAUhB,GACxC,OAAOxI,EAAA,UAAkBY,UAAM,OAAQ,EAAQ,WAC3C,IAAIsI,EAAaD,EAA0ChI,EAAIwI,EAC/D,OAAOzJ,EAAA,YAAoBY,KAAM,SAAUM,GACvC,OAAQA,EAAGC,OACP,KAAK,EAQD,GAPAD,EAAGwI,KAAKxE,KAAK,CAAC,EAAG,EAAG,CAAE,IAEtBtE,KAAKyC,iBAAiBiB,OACtB1D,KAAKoC,iBAAkB,EACvBpC,KAAK+I,UAAUnB,GACfU,EAActI,KAAKiG,gBACnBoC,EAAerI,KAAKgJ,gBAAgBpB,EAAIU,IACnCA,IAAgBD,EACjB,MAAM,IAAIY,MAAM,uCAEpB,OAAMZ,GAAgBA,EAAapI,QAAUL,EACtC,CAAC,EAAayI,EAAalI,KAAKH,KAAKsD,KADyB,CAAC,EAAa,GAEvF,KAAK,EACDhD,EAAGK,OACHL,EAAGC,MAAQ,EACf,KAAK,EAID,OAHAP,KAAKkJ,aAAab,EAAcC,EAAaV,IACvBA,EAAGuB,4BAA8BvB,EAAGwB,4BACtDf,IAAiBC,EAEd,CAAC,EAAatI,KAAKqJ,WAAWhB,EAAcC,EAAaV,IADhC,CAAC,EAAa,GAElD,KAAK,EAED,OADAvH,EAAKC,EAAGK,OACD,CAAC,EAAa,GACzB,KAAK,EACDN,EAAK,CAKD8H,cAAc,EACdC,oBAAoB,GAExB9H,EAAGC,MAAQ,EACf,KAAK,EAID,OAFAP,KAAKgI,QADI3H,EACYuH,GACrB5H,KAAK0C,gBAAgBgB,OACd,CAAC,EAAa,GACzB,KAAK,EAGD,OAFAmF,EAAiBvI,EAAGK,OACpBX,KAAKyI,OAAOI,EAAgBjB,GACrB,CAAC,EAAa,GACzB,KAAK,EAGD,OAFA5H,KAAKoC,iBAAkB,EACvBpC,KAAK+H,WACE,CAAC,SAK5BhG,EAAQ7B,UAAU6I,UAAY,SAAUnB,GACpC,IAAI0B,EAActJ,KAAKsC,MAAMb,OAK7B,GAJAmG,EAAGpD,KAAOoD,EAAGpD,MAAQ,QACIvD,IAArB2G,EAAGpD,KAAK9D,WACRkH,EAAGpD,KAAK9D,SAAWV,KAAKU,eAENO,IAAlB2G,EAAGrC,WAA0B,CAC7B9E,OAAAjB,EAAA,EAAAiB,MAA0BQ,IAAnB2G,EAAG1C,YAA2B,gCACrCzE,OAAAjB,EAAA,EAAAiB,MAA0BQ,IAAnB2G,EAAGzC,YAA2B,gCACrC,IAAIkC,EAAQrH,KAAKsC,MAAMqF,QAAQC,EAAGrC,YAClC,GAAI8B,EAAQ,EACR,MAAM,IAAI4B,MAAM,4BAEpBrB,EAAG1C,aAAemC,OAECpG,IAAnB2G,EAAG1C,cACC0C,EAAG1C,YAAc,IACjB0C,EAAG1C,YAAcoE,EAAc,GAE/B1B,EAAGzC,YAAc,IACjByC,EAAGzC,YAAcmE,EAAc1B,EAAG1C,aAEtC0C,EAAGwB,0BACCxB,EAAGzC,YAAc,GAAKyC,EAAG1C,YAAc0C,EAAGzC,cAAgBmE,GAE9D1B,EAAGhD,eAGCgD,EAAGjD,YAAc,GAAKiD,EAAGjD,YAAc2E,KACvC1B,EAAGjD,YAAc2E,GAErB1B,EAAGuB,2BAA6BvB,EAAGjD,cAAgB2E,GAEvD,IAAI1E,EAAcgD,EAAGhD,YACrB,GAAKA,EAAL,CAGAnE,OAAAjB,EAAA,EAAAiB,CAAOmE,EAAYnD,OAAS,EAAG,0BAC/B,IAAI8H,EAAiC3E,EAhhB5B4E,IAAI,SAAU1H,GACvB,OAAIA,aAAgBjC,EACTiC,EAEP,SAAUA,EACHD,EAAcC,EAAKA,KAAMA,EAAK/B,QAElC8B,EAAcC,OAAMb,KAC5BwI,OAAO,SAAU1C,GAAK,OAAa,OAANA,IAygB5B,GAA+B,IAA3BwC,EAAgB9H,OAChB,MAAM,IAAIwH,MAAM,2BAGpB,IAAK,IAAIvH,EAAK,EAAGgI,EAAoBH,EAAiB7H,EAAKgI,EAAkBjI,OAAQC,IAAM,CACvF,IAAIP,EAAOuI,EAAkBhI,GAC7BP,EAAKT,SAAWkH,EAAGpD,KAAK9D,SACxB,IAAIM,EAAMG,EAAKH,IACf,GAAIA,GAAOA,IAAQhB,KACf,MAAM,IAAIiJ,MAAM,sCAEpB,GAlnBe,IAknBX9H,EAAKlB,MACL,MAAM,IAAIgJ,MAAM,uCAGxBrB,EAAGhD,YAAc2E,IAErBxH,EAAQ7B,UAAU8I,gBAAkB,SAAUpB,EAAIU,GAC9C,IAAI1D,EAAcgD,EAAGhD,YACrB,QAAoB3D,IAAhB2D,EAGA,OAAOA,EAAYA,EAAYnD,OAAS,GAE5C,IAAIyD,EAAc0C,EAAG1C,YACrB,QAAoBjE,IAAhBiE,EAGA,IAFA,IAAI5C,EAAQtC,KAAKsC,MACbqH,EAAYzE,EAAc0C,EAAGzC,YACxByE,EAAItH,EAAMb,OAAS,EAAGmI,GAAK,EAAGA,IAAK,CACxC,IAAIzI,EAAOmB,EAAMsH,GACjB,IAAKA,EAAI1E,GAAe0E,GAAKD,IAAcxI,IAASmH,EAChD,OAAOnH,IAMvBY,EAAQ7B,UAAUgJ,aAAe,SAAUb,EAAcC,EAAaV,GAClEnH,OAAAjB,EAAA,EAAAiB,CAAO6H,GAAeD,EAAc,8CACpC5H,OAAAjB,EAAA,EAAAiB,CAAOmH,EAAG9B,QAAS,yBACnBrF,OAAAjB,EAAA,EAAAiB,CAAOmH,EAAGE,OAAQ,wBAClB,IAII+B,EAJArF,EAAOoD,EAAGpD,KACVI,EAAcgD,EAAGhD,YACjBM,EAAc0C,EAAG1C,YACjBC,EAAcyC,EAAGzC,YAGrB,QAAoBlE,IAAhBiE,QAA6CjE,IAAhBkE,EAA2B,CACxD1E,OAAAjB,EAAA,EAAAiB,CAAOyE,GAAe,EAAG,mCACzBzE,OAAAjB,EAAA,EAAAiB,CAAO0E,GAAe,EAAG,mCACzB0E,EAAe,GACf,IAAK,IAAID,EAAI,EAAGA,EAAIzE,EAAayE,KACzBzI,EAAOnB,KAAKsC,MAAMsH,EAAI1E,KACd/D,IAASkH,GAAgBlH,IAASmH,GAC1CuB,EAAavF,KAAKnD,GAI1BqD,EAAKqB,UAAYrB,EAAKqB,WAAa,OAEvC,IAAIiE,EAAe9J,KAAKsC,MAAMb,aACTR,IAAhB2D,EAA4BA,EAAYnD,OAAS,SACjCR,IAAhBkE,EAA4BA,EAAc,GAE/C,GADA1E,OAAAjB,EAAA,EAAAiB,CAAOqJ,GAAgB,EAAG,qCACL,IAAjBA,EAEA,MADAC,QAAQC,KAAK,uGAAwGhK,KAAMA,KAAKsD,IAC1H,IAAI2F,MAAM,iDAIpB,GAAIrE,EAAa,CAGb,IADA,IAAIE,EAAc8C,EAAGjD,YACZjD,EAAK,EAAGuI,EAAgBrF,EAAalD,EAAKuI,EAAcxI,OAAQC,IAErE1B,KAAKkK,aADD/I,EAAO8I,EAAcvI,GACDoD,GACxBA,IAEA8C,EAAGuB,6BAEH3E,EAAKqB,UAAYrB,EAAKqB,WAAa,WAQ3C,GAAIgE,GAAgBA,EAAapI,OAAS,EAAG,CACzC,IAAK,IAAIpB,EAAK,EAAG8J,EAAiBN,EAAcxJ,EAAK8J,EAAe1I,OAAQpB,IAAM,CAC9E,IAAIc,EAAOgJ,EAAe9J,GAC1BI,OAAAf,EAAA,EAAAe,CAAUU,EAAKX,QAASjB,EAAA,GACxBkB,OAAAf,EAAA,EAAAe,CAAUU,EAAKX,QAASjB,EAAA,GACxBkB,OAAAf,EAAA,EAAAe,CAAUU,EAAKX,QAASjB,EAAA,GAG5B,IAAK,IAAIe,EAAK,EAAG8J,EAAiBP,EAAcvJ,EAAK8J,EAAe3I,OAAQnB,IAExEN,KAAKqK,YADDlJ,EAAOiJ,EAAe9J,MAKtCyB,EAAQ7B,UAAUmJ,WAAa,SAAUhB,EAAcC,EAAaV,GAChE,OAAOxI,EAAA,UAAkBY,UAAM,OAAQ,EAAQ,WAC3C,IAAIwE,EAAM8F,EAAkB9G,EAAMiD,EAAY8D,EAAWC,EAAerC,EACpEpC,EAAQ/F,KACZ,OAAOZ,EAAA,YAAoBY,KAAM,SAAUK,GACvC,OAAQA,EAAGE,OACP,KAAK,EAUD,OARA+J,GADA9F,EAAOoD,EAAGpD,MACciG,kBAClB,SAAUC,GAAO,OAAO3E,EAAM4E,MAAQD,QACtCzJ,EACNuC,EAAO/C,OAAApB,EAAA,EAAAoB,CAAWT,MAClByG,EAAa4B,EAAa7H,QAC1B+J,EAAYjC,GAAeA,EAAY9H,QACvCgK,EAAgB/J,OAAOuG,OAAO,CAAExD,KAAMA,EAAMoH,WAAY5K,KAAKuH,cAAcc,GAAewC,OAAQ7K,KAAKsD,GAAIwH,iBAAkB9K,KAAK+K,WAAavG,EAAKsG,kBAAoBxL,EAAA,EAAO0L,IAAI,gBAAiBV,iBAAkBA,EAAkB/H,SAAUvC,KAAKuC,UAAYjD,EAAA,EAAOmE,WAAW,YAAY,GAAOgD,WAAYA,EAChT8D,UAAWA,GAAa/F,GACrB,CAAC,EAAa/D,OAAAf,EAAA,EAAAe,CAAW+J,IACpC,KAAK,EAED,OADArC,EAAgB9H,EAAGM,OAAQwH,aACpB,CAAC,EAAcnI,KAAKiL,iBAAiB9C,EAAcE,EAAcC,EAAa9D,UAKzGzC,EAAQ7B,UAAU+K,iBAAmB,SAAU9C,EAAcE,EAAcC,EAAa9D,GACpF,IAAI0G,EAAc/C,EAAeE,EAAeC,EAIhD,OAHI4C,GACAlL,KAAKmL,QAAQD,GAEV,CACH/C,aAAcA,EACdC,oBAAoB,EACpBC,aAAcA,EACdC,YAAaA,EACbzC,UAAWrB,EAAKqB,YAGxB9D,EAAQ7B,UAAUgK,aAAe,SAAU/I,EAAMkG,GAC7C,IAAI/E,EAAQtC,KAAKsC,MACb8I,EAAgB9I,EAAMqF,QAAQxG,GAC9BiK,GAAiB,GAGjB3K,OAAAjB,EAAA,EAAAiB,CAAOU,EAAKH,MAAQhB,KAAM,+BAC1BsC,EAAM+I,OAAOhE,EAAO,EAAG/E,EAAM+I,OAAOD,EAAe,GAAG,MAGtD3K,OAAAjB,EAAA,EAAAiB,EAAQU,EAAKH,IAAK,eAGlBG,EAAKH,IAAMhB,KAEXsC,EAAM+I,OAAOhE,EAAO,EAAGlG,KAG/BY,EAAQ7B,UAAUqF,WAAa,SAAUpE,GACrCV,OAAAjB,EAAA,EAAAiB,CAtwBkB,IAswBXU,EAAKlB,OArwBO,IAqwB0BkB,EAAKlB,MAAgC,4CAClF,IAAIqC,EAAQtC,KAAKsC,MACb+E,EAAQ/E,EAAMqF,QAAQxG,GAC1BV,OAAAjB,EAAA,EAAAiB,CAAO4G,GAAS,EAAG,kCACfA,GAAS,GACT/E,EAAM+I,OAAOhE,EAAO,IAG5BtF,EAAQ7B,UAAUmK,YAAc,SAAUlJ,GACtCA,EAAKP,WACLZ,KAAKuF,WAAWpE,IAKpBY,EAAQ7B,UAAUiL,QAAU,SAAUG,GAIlC,IAAItL,KAAKqC,UAKT,IAFA,IAAIC,EAAQtC,KAAKsC,MACbiJ,EAAkBjJ,EAAMqF,QAAQ2D,GAC3B1B,EAAItH,EAAMb,OAAS,EAAGmI,GAAK,EAAGA,IAAK,CACxC,IAAIzI,EAAOmB,EAAMsH,GACbpJ,EAAUW,EAAKX,QACfoJ,EAAI2B,GAGJ9K,OAAAf,EAAA,EAAAe,CAAUD,EAASjB,EAAA,GACnBS,KAAKqK,YAAYlJ,IAEZyI,EAAI2B,GAGT9K,OAAAf,EAAA,EAAAe,CAAcD,GAAS,KAInCuB,EAAQ7B,UAAU8D,SAAW,WACzB,QAAUhE,KAAK8C,eACV9C,KAAKoC,iBACqB,IAA3BpC,KAAKiC,WAAWR,QAChBzB,KAAKkC,kBACLlC,KAAKuH,iBAEbxF,EAAQ7B,UAAU+D,QAAU,WACxBjE,KAAK0E,UAAU,CACXQ,aAAc,EACdC,YAAa,EACbX,KAAM,CACFqB,UAAW,OACX4E,mBAAmB,SAExBxJ,IAEPc,EAAQ7B,UAAUgE,OAAS,SAAUsH,GAC7BxL,KAAK2K,OACL3K,KAAK2K,MAAMc,aAAaD,IAGhCzJ,EAAQ7B,UAAUiE,MAAQ,SAAUuH,EAAgBF,EAAWG,GAC3D,IAAI5F,EAAQ/F,KACZ,GAAIA,KAAK2K,MAAO,CACZ3K,KAAKkC,kBAAmB,EACxBlC,KAAK2K,MAAMiB,SAAS,WAChB7F,EAAM7D,kBAAmB,GAC1B,CAAE2J,iBAAiB,IAEtB,IAAIC,EAAe,GAAoB,KAAQ,KAS1CJ,EAKDI,GAAgBrL,OAAAd,EAAA,EAAAc,CAAwB,IAAId,EAAA,EAAM,EAAG,GAAI,IAAIA,EAAA,EAAM,IAAM,KAAO,IAAIA,EAAA,EAAM,EAAG,GAAI,IAAIA,EAAA,EAAM,EAAG,GAAI6L,IAJlHxL,KAAK2K,MAAMoB,OAAO,kCAClBD,GAAgBrL,OAAAd,EAAA,EAAAc,CAAwB,IAAId,EAAA,EAAM,EAAG,GAAI,IAAIA,EAAA,EAAM,EAAG,GAAI,IAAIA,EAAA,EAAM,IAAM,KAAO,IAAIA,EAAA,EAAM,EAAG,GAAI6L,IAKtHxL,KAAK2K,MAAMqB,YAAYN,EAAgBI,EAAcH,KAG7D5J,EAAQ7B,UAAU+L,OAAS,WACvB,OAAQxL,OAAApB,EAAA,EAAD,CAAG,OAAQ,OAEtBoB,OAAOyL,eAAenK,EAAQ7B,UAAW,KAAM,CAC3C8K,IAAK,WAAc,OAAOvK,OAAApB,EAAA,EAAAoB,CAAWT,OACrCmM,YAAY,EACZC,cAAc,IAElB3L,OAAOyL,eAAenK,EAAS,WAAY,CACvCiJ,IAAK,WACD,MAAO,CACHlI,aAAgB,CAAC,uBACjBE,KAAQ,CAAC,iBAGjBmJ,YAAY,EACZC,cAAc,IAElB3L,OAAOyL,eAAenK,EAAS,QAAS,CACpCiJ,IAAK,WAAc,MAAO,8GAC1BmB,YAAY,EACZC,cAAc,IAEXrK,EArxBa,GAuxBpBsK,EAAU,SAAU/I,EAAIgJ,EAAiBxM,EAAWyE,GACpD,IAAIvD,EAAMsC,EAAGC,QAAQ,WACrB,GAAIvC,EACA,GAAwB,YAApBsL,GACA,QAAkBrL,IAAdnB,EACA,OAAOkB,EAAIsD,KAAKxE,EAAWyE,EAAgB,CAAEsD,YAAY,SAG5D,GAAwB,SAApByE,GACL,QAAkBrL,IAAdnB,EACA,OAAOkB,EAAIiC,QAAQnD,EAAWyE,EAAgB,CAAEsD,YAAY,SAG/D,GAAwB,SAApByE,EACL,OAAOtL,EAAIiE,IAAI,CAAE4C,YAAY,IAGrC,OAAO3B,QAAQJ,SAAQ,IAEvB9G,EAAyB,WACzB,SAASuN,EAAQvK,GACb,IAAI+D,EAAQ/F,KACZS,OAAApB,EAAA,EAAAoB,CAAiBT,KAAMgC,GAIvBhC,KAAKsM,gBAAkB,UACvBtM,KAAKwM,QAAU,WACX,OAAOH,EAAQtG,EAAMzC,GAAIyC,EAAMuG,gBAAiBvG,EAAMjG,UAAWiG,EAAMxB,iBAW/E,OARAgI,EAAQrM,UAAU+L,OAAS,WACvB,OAAQxL,OAAApB,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAEmN,QAASxM,KAAKwM,WAEpC/L,OAAOyL,eAAeK,EAAQrM,UAAW,KAAM,CAC3C8K,IAAK,WAAc,OAAOvK,OAAApB,EAAA,EAAAoB,CAAWT,OACrCmM,YAAY,EACZC,cAAc,IAEXG,EApBiB,GAsBxBtN,EAAwB,WACxB,SAASwN,EAAQzK,GACb,IAAI+D,EAAQ/F,KACZS,OAAApB,EAAA,EAAAoB,CAAiBT,KAAMgC,GACvBhC,KAAKiF,IAAM,WACP,OAAOoH,EAAQtG,EAAMzC,GAAI,SAcjC,OAXAmJ,EAAQvM,UAAUyD,iBAAmB,WACjCoG,QAAQC,KAAK,gHAEjByC,EAAQvM,UAAU+L,OAAS,WACvB,OAAQxL,OAAApB,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAEmN,QAASxM,KAAKiF,OAEpCxE,OAAOyL,eAAeO,EAAQvM,UAAW,KAAM,CAC3C8K,IAAK,WAAc,OAAOvK,OAAApB,EAAA,EAAAoB,CAAWT,OACrCmM,YAAY,EACZC,cAAc,IAEXK,EAnBgB,GAqBvBvN,EAAyB,WACzB,SAASwN,EAAQ1K,GACb,IAAI+D,EAAQ/F,KACZS,OAAApB,EAAA,EAAAoB,CAAiBT,KAAMgC,GACvBhC,KAAKsE,KAAO,WACR,OAAO+H,EAAQtG,EAAMzC,GAAI,UAAWyC,EAAMjG,UAAWiG,EAAMxB,iBAcnE,OAXAmI,EAAQxM,UAAUyD,iBAAmB,WACjCoG,QAAQC,KAAK,6IAEjB0C,EAAQxM,UAAU+L,OAAS,WACvB,OAAQxL,OAAApB,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAEmN,QAASxM,KAAKsE,QAEpC7D,OAAOyL,eAAeQ,EAAQxM,UAAW,KAAM,CAC3C8K,IAAK,WAAc,OAAOvK,OAAApB,EAAA,EAAAoB,CAAWT,OACrCmM,YAAY,EACZC,cAAc,IAEXM,EAnBiB,GAqBxBvN,EAA4B,WAC5B,SAASwN,EAAQ3K,GACb,IAAI+D,EAAQ/F,KACZS,OAAApB,EAAA,EAAAoB,CAAiBT,KAAMgC,GACvBhC,KAAKiD,QAAU,WACX,OAAOoJ,EAAQtG,EAAMzC,GAAI,OAAQyC,EAAMjG,UAAWiG,EAAMxB,iBAchE,OAXAoI,EAAQzM,UAAUyD,iBAAmB,WACjCoG,QAAQC,KAAK,4KAEjB2C,EAAQzM,UAAU+L,OAAS,WACvB,OAAQxL,OAAApB,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAEmN,QAASxM,KAAKiD,WAEpCxC,OAAOyL,eAAeS,EAAQzM,UAAW,KAAM,CAC3C8K,IAAK,WAAc,OAAOvK,OAAApB,EAAA,EAAAoB,CAAWT,OACrCmM,YAAY,EACZC,cAAc,IAEXO,EAnBoB","file":"66.40f47cc2a3b3d72f30fe.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-5ba38749.js';\nimport { b as config } from './config-6ccf652f.js';\nimport { d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './constants-94c4865f.js';\nimport { b as assert } from './helpers-c90aaa66.js';\nimport { a as attachComponent } from './framework-delegate-00265c49.js';\nimport { l as lifecycle, t as transition, s as setPageHidden } from './index-84f27767.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-90d0df24.js';\nvar VIEW_STATE_NEW = 1;\nvar VIEW_STATE_ATTACHED = 2;\nvar VIEW_STATE_DESTROYED = 3;\nvar ViewController = /** @class */ (function () {\n    function ViewController(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    ViewController.prototype.init = function (container) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var component, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = VIEW_STATE_ATTACHED;\n                        if (!!this.element) return [3 /*break*/, 2];\n                        component = this.component;\n                        _a = this;\n                        return [4 /*yield*/, attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params)];\n                    case 1:\n                        _a.element = _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * DOM WRITE\n     */\n    ViewController.prototype._destroy = function () {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        var element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    };\n    return ViewController;\n}());\nvar matches = function (view, id, params) {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    var currentParams = view.params;\n    if (currentParams === params) {\n        return true;\n    }\n    if (!currentParams && !params) {\n        return true;\n    }\n    if (!currentParams || !params) {\n        return false;\n    }\n    var keysA = Object.keys(currentParams);\n    var keysB = Object.keys(params);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {\n        var key = keysA_1[_i];\n        if (currentParams[key] !== params[key]) {\n            return false;\n        }\n    }\n    return true;\n};\nvar convertToView = function (page, params) {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nvar convertToViews = function (pages) {\n    return pages.map(function (page) {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('page' in page) {\n            return convertToView(page.page, page.params);\n        }\n        return convertToView(page, undefined);\n    }).filter(function (v) { return v !== null; });\n};\nvar Nav = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    }\n    class_1.prototype.swipeGestureChanged = function () {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.swipeGesture !== true);\n        }\n    };\n    class_1.prototype.rootChanged = function () {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            var mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.rootChanged();\n                        _a = this;\n                        return [4 /*yield*/, import('./swipe-back-dc1b83c2.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n                        this.swipeGestureChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.componentDidUnload = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var view = _a[_i];\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    };\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.push = function (component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ page: component, params: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insert = function (insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ page: component, params: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insertPages = function (insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.pop = function (opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popTo = function (indexOrViewCtrl, opts, done) {\n        var tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts: opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    };\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popToRoot = function (opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.removeIndex = function (startIndex, removeCount, opts, done) {\n        if (removeCount === void 0) { removeCount = 1; }\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount: removeCount,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setRoot = function (component, componentProps, opts, done) {\n        return this.setPages([{ page: component, params: componentProps }], opts, done);\n    };\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setPages = function (views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /** @internal */\n    class_1.prototype.setRouteId = function (id, params, direction) {\n        var _this = this;\n        var active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        var resolve;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        var finish;\n        var commonOpts = {\n            updateURL: false,\n            viewIsReady: function (enteringEl) {\n                var mark;\n                var p = new Promise(function (r) { return (mark = r); });\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    mark();\n                                    return [4 /*yield*/, finish];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            var viewController = this.views.find(function (v) { return matches(v, id, params); });\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign({}, commonOpts, { direction: 'back' }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, commonOpts);\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign({}, commonOpts, { direction: 'back', animated: true }));\n            }\n        }\n        return promise;\n    };\n    /** @internal */\n    class_1.prototype.getRouteId = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var active;\n            return tslib_1.__generator(this, function (_a) {\n                active = this.getActiveSync();\n                return [2 /*return*/, active\n                        ? {\n                            id: active.element.tagName,\n                            params: active.params,\n                            element: active.element\n                        }\n                        : undefined];\n            });\n        });\n    };\n    /**\n     * Get the active view.\n     */\n    class_1.prototype.getActive = function () {\n        return Promise.resolve(this.getActiveSync());\n    };\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    class_1.prototype.getByIndex = function (index) {\n        return Promise.resolve(this.views[index]);\n    };\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    class_1.prototype.canGoBack = function (view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    };\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    class_1.prototype.getPrevious = function (view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    };\n    class_1.prototype.getLength = function () {\n        return this.views.length;\n    };\n    class_1.prototype.getActiveSync = function () {\n        return this.views[this.views.length - 1];\n    };\n    class_1.prototype.canGoBackSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        return !!(view && this.getPreviousSync(view));\n    };\n    class_1.prototype.getPreviousSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        if (!view) {\n            return undefined;\n        }\n        var views = this.views;\n        var index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    };\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    class_1.prototype.queueTrns = function (ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        var promise = new Promise(function (resolve, reject) {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    };\n    class_1.prototype.success = function (result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            var router = document.querySelector('ion-router');\n            if (router) {\n                var direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    };\n    class_1.prototype.failed = function (rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    };\n    class_1.prototype.fireError = function (rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    };\n    class_1.prototype.nextTrns = function () {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        var ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    };\n    class_1.prototype.runTransition = function (ti) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var leavingView, enteringView, requiresTransition, result, _a, rejectReason_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 6, , 7]);\n                        // set that this nav is actively transitioning\n                        this.ionNavWillChange.emit();\n                        this.isTransitioning = true;\n                        this.prepareTI(ti);\n                        leavingView = this.getActiveSync();\n                        enteringView = this.getEnteringView(ti, leavingView);\n                        if (!leavingView && !enteringView) {\n                            throw new Error('no views in the stack to be removed');\n                        }\n                        if (!(enteringView && enteringView.state === VIEW_STATE_NEW)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, enteringView.init(this.el)];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        this.postViewInit(enteringView, leavingView, ti);\n                        requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                            enteringView !== leavingView;\n                        if (!requiresTransition) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.transition(enteringView, leavingView, ti)];\n                    case 3:\n                        _a = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _a = {\n                            // transition is not required, so we are already done!\n                            // they're inserting/removing the views somewhere in the middle or\n                            // beginning, so visually nothing needs to animate/transition\n                            // resolve immediately because there's no animation that's happening\n                            hasCompleted: true,\n                            requiresTransition: false\n                        };\n                        _b.label = 5;\n                    case 5:\n                        result = _a;\n                        this.success(result, ti);\n                        this.ionNavDidChange.emit();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        rejectReason_1 = _b.sent();\n                        this.failed(rejectReason_1, ti);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        this.isTransitioning = false;\n                        this.nextTrns();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.prepareTI = function (ti) {\n        var viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            var index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        var insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        var viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (var _i = 0, viewControllers_1 = viewControllers; _i < viewControllers_1.length; _i++) {\n            var view = viewControllers_1[_i];\n            view.delegate = ti.opts.delegate;\n            var nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    };\n    class_1.prototype.getEnteringView = function (ti, leavingView) {\n        var insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        var removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            var views = this.views;\n            var removeEnd = removeStart + ti.removeCount;\n            for (var i = views.length - 1; i >= 0; i--) {\n                var view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    };\n    class_1.prototype.postViewInit = function (enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        var opts = ti.opts;\n        var insertViews = ti.insertViews;\n        var removeStart = ti.removeStart;\n        var removeCount = ti.removeCount;\n        var destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (var i = 0; i < removeCount; i++) {\n                var view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        var finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(\"You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.\", this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            var insertIndex = ti.insertStart;\n            for (var _i = 0, insertViews_1 = insertViews; _i < insertViews_1.length; _i++) {\n                var view = insertViews_1[_i];\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (var _a = 0, destroyQueue_1 = destroyQueue; _a < destroyQueue_1.length; _a++) {\n                var view = destroyQueue_1[_a];\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (var _b = 0, destroyQueue_2 = destroyQueue; _b < destroyQueue_2.length; _b++) {\n                var view = destroyQueue_2[_b];\n                this.destroyView(view);\n            }\n        }\n    };\n    class_1.prototype.transition = function (enteringView, leavingView, ti) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var opts, progressCallback, mode, enteringEl, leavingEl, animationOpts, hasCompleted;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        opts = ti.opts;\n                        progressCallback = opts.progressAnimation\n                            ? function (ani) { return _this.sbAni = ani; }\n                            : undefined;\n                        mode = getIonMode(this);\n                        enteringEl = enteringView.element;\n                        leavingEl = leavingView && leavingView.element;\n                        animationOpts = Object.assign({ mode: mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback: progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl: enteringEl,\n                            leavingEl: leavingEl }, opts);\n                        return [4 /*yield*/, transition(animationOpts)];\n                    case 1:\n                        hasCompleted = (_a.sent()).hasCompleted;\n                        return [2 /*return*/, this.transitionFinish(hasCompleted, enteringView, leavingView, opts)];\n                }\n            });\n        });\n    };\n    class_1.prototype.transitionFinish = function (hasCompleted, enteringView, leavingView, opts) {\n        var cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted: hasCompleted,\n            requiresTransition: true,\n            enteringView: enteringView,\n            leavingView: leavingView,\n            direction: opts.direction\n        };\n    };\n    class_1.prototype.insertViewAt = function (view, index) {\n        var views = this.views;\n        var existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    };\n    class_1.prototype.removeView = function (view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        var views = this.views;\n        var index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    };\n    class_1.prototype.destroyView = function (view) {\n        view._destroy();\n        this.removeView(view);\n    };\n    /**\n     * DOM WRITE\n     */\n    class_1.prototype.cleanup = function (activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        var views = this.views;\n        var activeViewIndex = views.indexOf(activeView);\n        for (var i = views.length - 1; i >= 0; i--) {\n            var view = views[i];\n            var element = view.element;\n            if (i > activeViewIndex) {\n                // this view comes after the active view\n                // let's unload it\n                lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                this.destroyView(view);\n            }\n            else if (i < activeViewIndex) {\n                // this view comes before the active view\n                // and it is not a portal then ensure it is hidden\n                setPageHidden(element, true);\n            }\n        }\n    };\n    class_1.prototype.canStart = function () {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    };\n    class_1.prototype.onStart = function () {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    };\n    class_1.prototype.onMove = function (stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    };\n    class_1.prototype.onEnd = function (shouldComplete, stepValue, dur) {\n        var _this = this;\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(function () {\n                _this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            var newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(1, 0), new Point(0.68, 0.28), new Point(1, 1), stepValue);\n            }\n            else {\n                newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.32, 0.72), new Point(0, 1), new Point(1, 1), stepValue);\n            }\n            this.sbAni.progressEnd(shouldComplete, newStepValue, dur);\n        }\n    };\n    class_1.prototype.render = function () {\n        return (h(\"slot\", null));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"swipeGesture\": [\"swipeGestureChanged\"],\n                \"root\": [\"rootChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar navLink = function (el, routerDirection, component, componentProps) {\n    var nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true });\n        }\n    }\n    return Promise.resolve(false);\n};\nvar NavLink = /** @class */ (function () {\n    function class_2(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function () {\n            return navLink(_this.el, _this.routerDirection, _this.component, _this.componentProps);\n        };\n    }\n    class_2.prototype.render = function () {\n        return (h(Host, { onClick: this.onClick }));\n    };\n    Object.defineProperty(class_2.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return class_2;\n}());\nvar NavPop = /** @class */ (function () {\n    function class_3(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.pop = function () {\n            return navLink(_this.el, 'back');\n        };\n    }\n    class_3.prototype.componentDidLoad = function () {\n        console.warn('[DEPRECATED][ion-nav-pop] <ion-nav-pop> is deprecated. Use `<ion-nav-link routerDirection=\"back\">` instead.');\n    };\n    class_3.prototype.render = function () {\n        return (h(Host, { onClick: this.pop }));\n    };\n    Object.defineProperty(class_3.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return class_3;\n}());\nvar NavPush = /** @class */ (function () {\n    function class_4(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.push = function () {\n            return navLink(_this.el, 'forward', _this.component, _this.componentProps);\n        };\n    }\n    class_4.prototype.componentDidLoad = function () {\n        console.warn('[DEPRECATED][ion-nav-push] `<ion-nav-push component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\">` instead.');\n    };\n    class_4.prototype.render = function () {\n        return (h(Host, { onClick: this.push }));\n    };\n    Object.defineProperty(class_4.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return class_4;\n}());\nvar NavSetRoot = /** @class */ (function () {\n    function class_5(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.setRoot = function () {\n            return navLink(_this.el, 'root', _this.component, _this.componentProps);\n        };\n    }\n    class_5.prototype.componentDidLoad = function () {\n        console.warn('[DEPRECATED][ion-nav-set-root] `<ion-nav-set-root component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\" routerDirection=\"root\">` instead.');\n    };\n    class_5.prototype.render = function () {\n        return (h(Host, { onClick: this.setRoot }));\n    };\n    Object.defineProperty(class_5.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return class_5;\n}());\nexport { Nav as ion_nav, NavLink as ion_nav_link, NavPop as ion_nav_pop, NavPush as ion_nav_push, NavSetRoot as ion_nav_set_root };\n"],"sourceRoot":""}