{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-controller_8.entry.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ActionSheetController","AlertController","Anchor","LoadingController","ModalController","PickerController","PopoverController","ToastController","tslib__WEBPACK_IMPORTED_MODULE_0__","_core_5ba38749_js__WEBPACK_IMPORTED_MODULE_1__","_overlays_6ea64c21_js__WEBPACK_IMPORTED_MODULE_3__","_theme_353a032e_js__WEBPACK_IMPORTED_MODULE_4__","class_1","hostRef","Object","this","prototype","create","options","dismiss","data","role","id","document","getTop","_a","class_2","class_3","_this","routerDirection","onClick","ev","href","componentDidLoad","console","warn","render","mode","attrs","rel","class","assign","color","defineProperty","get","enumerable","configurable","class_4","class_5","class_6","class_7","class_8"],"mappings":"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","file":"25.81e09332f4f38711e29f.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, d as getIonMode, h, H as Host } from './core-5ba38749.js';\nimport './config-6ccf652f.js';\nimport { h as createOverlay, j as dismissOverlay, k as getOverlay } from './overlays-6ea64c21.js';\nimport { o as openURL, c as createColorClasses } from './theme-353a032e.js';\nvar ActionSheetController = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an action sheet overlay with action sheet options.\n     *\n     * @param options The options to use to create the action sheet.\n     */\n    class_1.prototype.create = function (options) {\n        return createOverlay('ion-action-sheet', options);\n    };\n    /**\n     * Dismiss the open action sheet overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n     */\n    class_1.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n    };\n    /**\n     * Get the most recently opened action sheet overlay.\n     */\n    class_1.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-action-sheet')];\n            });\n        });\n    };\n    return class_1;\n}());\nvar AlertController = /** @class */ (function () {\n    function class_2(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an alert overlay with alert options.\n     *\n     * @param options The options to use to create the alert.\n     */\n    class_2.prototype.create = function (options) {\n        return createOverlay('ion-alert', options);\n    };\n    /**\n     * Dismiss the open alert overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n     */\n    class_2.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-alert', id);\n    };\n    /**\n     * Get the most recently opened alert overlay.\n     */\n    class_2.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-alert')];\n            });\n        });\n    };\n    return class_2;\n}());\nvar Anchor = /** @class */ (function () {\n    function class_3(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function (ev) {\n            openURL(_this.href, ev, _this.routerDirection);\n        };\n    }\n    class_3.prototype.componentDidLoad = function () {\n        console.warn('[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n    };\n    class_3.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        var attrs = {\n            href: this.href,\n            rel: this.rel\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['ion-activatable'] = true, _a)) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    };\n    Object.defineProperty(class_3, \"style\", {\n        get: function () { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_3;\n}());\nvar LoadingController = /** @class */ (function () {\n    function class_4(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a loading overlay with loading options.\n     *\n     * @param options The options to use to create the loading.\n     */\n    class_4.prototype.create = function (options) {\n        return createOverlay('ion-loading', options);\n    };\n    /**\n     * Dismiss the open loading overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the loading.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the loading.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n     */\n    class_4.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-loading', id);\n    };\n    /**\n     * Get the most recently opened loading overlay.\n     */\n    class_4.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-loading')];\n            });\n        });\n    };\n    return class_4;\n}());\nvar ModalController = /** @class */ (function () {\n    function class_5(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a modal overlay with modal options.\n     *\n     * @param options The options to use to create the modal.\n     */\n    class_5.prototype.create = function (options) {\n        return createOverlay('ion-modal', options);\n    };\n    /**\n     * Dismiss the open modal overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the modal.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n     */\n    class_5.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-modal', id);\n    };\n    /**\n     * Get the most recently opened modal overlay.\n     */\n    class_5.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-modal')];\n            });\n        });\n    };\n    return class_5;\n}());\nvar PickerController = /** @class */ (function () {\n    function class_6(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a picker overlay with picker options.\n     *\n     * @param options The options to use to create the picker.\n     */\n    class_6.prototype.create = function (options) {\n        return createOverlay('ion-picker', options);\n    };\n    /**\n     * Dismiss the open picker overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n     */\n    class_6.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-picker', id);\n    };\n    /**\n     * Get the most recently opened picker overlay.\n     */\n    class_6.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-picker')];\n            });\n        });\n    };\n    return class_6;\n}());\nvar PopoverController = /** @class */ (function () {\n    function class_7(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a popover overlay with popover options.\n     *\n     * @param options The options to use to create the popover.\n     */\n    class_7.prototype.create = function (options) {\n        return createOverlay('ion-popover', options);\n    };\n    /**\n     * Dismiss the open popover overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the popover.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n     */\n    class_7.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-popover', id);\n    };\n    /**\n     * Get the most recently opened popover overlay.\n     */\n    class_7.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-popover')];\n            });\n        });\n    };\n    return class_7;\n}());\nvar ToastController = /** @class */ (function () {\n    function class_8(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a toast overlay with toast options.\n     *\n     * @param options The options to use to create the toast.\n     */\n    class_8.prototype.create = function (options) {\n        return createOverlay('ion-toast', options);\n    };\n    /**\n     * Dismiss the open toast overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n     */\n    class_8.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-toast', id);\n    };\n    /**\n     * Get the most recently opened toast overlay.\n     */\n    class_8.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-toast')];\n            });\n        });\n    };\n    return class_8;\n}());\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\n"],"sourceRoot":""}