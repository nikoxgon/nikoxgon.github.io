{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-menu_4-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as getIonMode, c as createEvent, k as getConnect, h, H as Host, e as getElement } from './core-13ed1ad7.js';\nimport { b as config } from './config-bb99b659.js';\nimport { c as createAnimation } from './animation-22971d74.js';\nimport { GESTURE_CONTROLLER } from './index-2c4a5477.js';\nimport { c as createColorClasses } from './theme-353a032e.js';\nimport { i as isEndSide, b as assert } from './helpers-c90aaa66.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-90d0df24.js';\n\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.mode = getIonMode(this);\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lazyMenuCtrl = getConnect(this, \"ion-menu-controller\");\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async componentWillLoad() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\n        }\n        const menuCtrl = this.menuCtrl = await this.lazyMenuCtrl.componentOnReady().then(p => p._getInstance());\n        const el = this.el;\n        const parent = el.parentNode;\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuCtrl._register(this);\n        this.gesture = (await import('./index-2c4a5477.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    }\n    componentDidUnload() {\n        this.blocker.destroy();\n        this.menuCtrl._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return this.menuCtrl._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await this.menuCtrl._createAnimation(this.type, this);\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? 'cubic-bezier(0.4, 0.0, 0.6, 1)' : 'cubic-bezier(0.0, 0.0, 0.2, 1)');\n        if (animated) {\n            await ani.playAsync();\n        }\n        else {\n            ani.playSync();\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        if (!this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (this.menuCtrl.getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation\n            .direction((this._isOpen) ? 'reverse' : 'normal')\n            .progressStart(true);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation\n            .progressStep(stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.timeStamp;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.4, 0), new Point(0.6, 1), new Point(1, 1), stepValue);\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), {\n            oneTimeCallback: true\n        })\n            .progressEnd(shouldComplete, newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled && this.menuCtrl) {\n            this.menuCtrl._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.playSync();\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, mode, isPaneVisible } = this;\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    static get style() { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:80}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-push){z-index:80}:host(.menu-type-push) .show-backdrop{display:block}\"; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\n// Get the menu controller element\r\nconst getMenuController = (doc) => {\r\n    const menuControllerElement = doc.querySelector('ion-menu-controller');\r\n    if (!menuControllerElement) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    return menuControllerElement.componentOnReady();\r\n};\r\n// Given a menu, toggle it\r\nconst toggleMenu = async (menu) => {\r\n    const menuCtrl = await getMenuController(document);\r\n    if (menuCtrl) {\r\n        const menuEl = await menuCtrl.get(menu);\r\n        if (menuEl) {\r\n            menuCtrl.toggle(menu);\r\n        }\r\n    }\r\n};\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuCtrl = await getMenuController(document);\r\n    if (menuCtrl) {\r\n        const menuEl = await menuCtrl.get(menu);\r\n        if (menuEl && await menuEl.isActive()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.setVisibility = async () => {\n            this.visible = await updateVisibility(this.menu);\n        };\n        this.onClick = async () => {\n            await toggleMenu(this.menu);\n        };\n    }\n    async componentDidLoad() {\n        await this.setVisibility();\n    }\n    async visibilityChanged() {\n        await this.setVisibility();\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', 'menu');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign({ [mode]: true }, createColorClasses(color), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: this.disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    static get style() { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--border-radius:4px;--color:var(--ion-color-primary,#3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.activated){opacity:.4}\\@media (any-hover:hover){:host(:hover){opacity:.6}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.1)}\"; }\n};\n\n/**\r\n * baseAnimation\r\n * Base class which is extended by the various types. Each\r\n * type will provide their own animations for open and close\r\n * and registers itself with Menu.\r\n */\r\nconst baseAnimation = () => {\r\n    // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\r\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\r\n    // \"Apply the sharp curve to items temporarily leaving the screen that may return\r\n    // from the same exit point. When they return, use the deceleration curve. On mobile,\r\n    // this transition typically occurs over 300ms\" -- MD Motion Guide\r\n    return createAnimation()\r\n        .easing('cubic-bezier(0.0, 0.0, 0.2, 1)') // Deceleration curve (Entering the screen)\r\n        .duration(300);\r\n};\n\n/**\r\n * Menu Overlay Type\r\n * The menu slides over the content. The content\r\n * itself, which is under the menu, does not move.\r\n */\r\nconst menuOverlayAnimation = (menu) => {\r\n    let closedX;\r\n    let openedX;\r\n    const BOX_SHADOW_WIDTH = 8;\r\n    const width = menu.width + BOX_SHADOW_WIDTH;\r\n    const menuAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    if (menu.isEndSide) {\r\n        // right side\r\n        closedX = width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    else {\r\n        // left side\r\n        closedX = -width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    menuAnimation\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('transform', `translateX(${closedX})`, `translateX(${openedX})`);\r\n    backdropAnimation\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation().addAnimation([menuAnimation, backdropAnimation]);\r\n};\n\n/**\r\n * Menu Push Type\r\n * The content slides over to reveal the menu underneath.\r\n * The menu itself also slides over to reveal its bad self.\r\n */\r\nconst menuPushAnimation = (menu) => {\r\n    let contentOpenedX;\r\n    let menuClosedX;\r\n    const width = menu.width;\r\n    if (menu.isEndSide) {\r\n        contentOpenedX = -width + 'px';\r\n        menuClosedX = width + 'px';\r\n    }\r\n    else {\r\n        contentOpenedX = width + 'px';\r\n        menuClosedX = -width + 'px';\r\n    }\r\n    const menuAnimation = createAnimation()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('transform', `translateX(${menuClosedX})`, 'translateX(0px)');\r\n    const contentAnimation = createAnimation()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('transform', 'translateX(0px)', `translateX(${contentOpenedX})`);\r\n    const backdropAnimation = createAnimation()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation().addAnimation([menuAnimation, backdropAnimation, contentAnimation]);\r\n};\n\n/**\r\n * Menu Reveal Type\r\n * The content slides over to reveal the menu underneath.\r\n * The menu itself, which is under the content, does not move.\r\n */\r\nconst menuRevealAnimation = (menu) => {\r\n    const openedX = (menu.width * (menu.isEndSide ? -1 : 1)) + 'px';\r\n    const contentOpen = createAnimation()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('transform', 'translateX(0px)', `translateX(${openedX})`);\r\n    return baseAnimation().addAnimation(contentOpen);\r\n};\n\nconst MenuController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.menus = [];\n        this.menuAnimations = new Map();\n        this.registerAnimation('reveal', menuRevealAnimation);\n        this.registerAnimation('push', menuPushAnimation);\n        this.registerAnimation('overlay', menuOverlayAnimation);\n    }\n    /**\n     * Open the menu. If a menu is not provided then it will open the first\n     * menu found. If the specified menu is `start` or `end`, then it will open\n     * the enabled menu on that side. Otherwise, it will try to find the menu\n     * using the menu's `id` property. If a menu is not found then it will\n     * return `false`.\n     *\n     * @param menu The menuId or side of the menu to open.\n     */\n    async open(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return menuEl.open();\n        }\n        return false;\n    }\n    /**\n     * Close the menu. If a menu is specified, it will close that menu.\n     * If no menu is specified, then it will close any menu that is open.\n     * If it does not find any open menus, it will return `false`.\n     *\n     * @param menu The menuId or side of the menu to close.\n     */\n    async close(menu) {\n        const menuEl = await (menu !== undefined ? this.get(menu) : this.getOpen());\n        if (menuEl !== undefined) {\n            return menuEl.close();\n        }\n        return false;\n    }\n    /**\n     * Toggle the menu open or closed. If the menu is already open, it will try to\n     * close the menu, otherwise it will try to open it. Returns `false` if\n     * a menu is not found.\n     *\n     * @param menu The menuId or side of the menu to toggle.\n     */\n    async toggle(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return menuEl.toggle();\n        }\n        return false;\n    }\n    /**\n     * Enable or disable a menu. Disabling a menu will not allow gestures\n     * for that menu or any calls to open it. This is useful when there are\n     * multiple menus on the same side and only one of them should be allowed\n     * to open. Enabling a menu will automatically disable all other menus\n     * on that side.\n     *\n     * @param enable If `true`, the menu should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable.\n     */\n    async enable(enable, menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            menuEl.disabled = !enable;\n        }\n        return menuEl;\n    }\n    /**\n     * Enable or disable the ability to swipe open the menu.\n     *\n     * @param enable If `true`, the menu swipe gesture should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\n     */\n    async swipeGesture(enable, menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            menuEl.swipeGesture = enable;\n        }\n        return menuEl;\n    }\n    /**\n     * Get whether or not the menu is open. Returns `true` if the specified\n     * menu is open. If a menu is not specified, it will return `true` if\n     * any menu is currently open.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    async isOpen(menu) {\n        if (menu != null) {\n            const menuEl = await this.get(menu);\n            return (menuEl !== undefined && menuEl.isOpen());\n        }\n        else {\n            const menuEl = await this.getOpen();\n            return menuEl !== undefined;\n        }\n    }\n    /**\n     * Get whether or not the menu is enabled. Returns `true` if the\n     * specified menu is enabled. Returns `false` if a menu is disabled\n     * or not found.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    async isEnabled(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return !menuEl.disabled;\n        }\n        return false;\n    }\n    /**\n     * Get a menu instance. If a menu is not provided then it will return the first\n     * menu found. If the specified menu is `start` or `end`, then it will return the\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\n     * `id` property. If a menu is not found then it will return `null`.\n     *\n     * @param menu The menuId or side of the menu.\n     */\n    async get(menu) {\n        await this.waitUntilReady();\n        if (menu === 'start' || menu === 'end') {\n            // there could be more than one menu on the same side\n            // so first try to get the enabled one\n            const menuRef = this.find(m => m.side === menu && !m.disabled);\n            if (menuRef) {\n                return menuRef;\n            }\n            // didn't find a menu side that is enabled\n            // so try to get the first menu side found\n            return this.find(m => m.side === menu);\n        }\n        else if (menu != null) {\n            // the menuId was not left or right\n            // so try to get the menu by its \"id\"\n            return this.find(m => m.menuId === menu);\n        }\n        // return the first enabled menu\n        const menuEl = this.find(m => !m.disabled);\n        if (menuEl) {\n            return menuEl;\n        }\n        // get the first menu in the array, if one exists\n        return this.menus.length > 0 ? this.menus[0].el : undefined;\n    }\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    async getOpen() {\n        await this.waitUntilReady();\n        return this.getOpenSync();\n    }\n    /**\n     * Get all menu instances.\n     */\n    async getMenus() {\n        await this.waitUntilReady();\n        return this.getMenusSync();\n    }\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    async isAnimating() {\n        await this.waitUntilReady();\n        return this.isAnimatingSync();\n    }\n    /**\n     * Registers a new animation that can be used with any `ion-menu` by\n     * passing the name of the animation in its `type` property.\n     *\n     * @param name The name of the animation to register.\n     * @param animation The animation function to register.\n     */\n    async registerAnimation(name, animation) {\n        this.menuAnimations.set(name, animation);\n    }\n    /**\n     * @internal\n     */\n    _getInstance() {\n        return Promise.resolve(this);\n    }\n    _register(menu) {\n        const menus = this.menus;\n        if (menus.indexOf(menu) < 0) {\n            if (!menu.disabled) {\n                this._setActiveMenu(menu);\n            }\n            menus.push(menu);\n        }\n    }\n    _unregister(menu) {\n        const index = this.menus.indexOf(menu);\n        if (index > -1) {\n            this.menus.splice(index, 1);\n        }\n    }\n    _setActiveMenu(menu) {\n        // if this menu should be enabled\n        // then find all the other menus on this same side\n        // and automatically disable other same side menus\n        const side = menu.side;\n        this.menus\n            .filter(m => m.side === side && m !== menu)\n            .forEach(m => m.disabled = true);\n    }\n    async _setOpen(menu, shouldOpen, animated) {\n        if (this.isAnimatingSync()) {\n            return false;\n        }\n        if (shouldOpen) {\n            const openedMenu = await this.getOpen();\n            if (openedMenu && menu.el !== openedMenu) {\n                await openedMenu.setOpen(false, false);\n            }\n        }\n        return menu._setOpen(shouldOpen, animated);\n    }\n    async _createAnimation(type, menuCmp) {\n        const animationBuilder = this.menuAnimations.get(type);\n        if (!animationBuilder) {\n            throw new Error('animation not registered');\n        }\n        const animation = animationBuilder(menuCmp);\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        return animation;\n    }\n    getOpenSync() {\n        return this.find(m => m._isOpen);\n    }\n    getMenusSync() {\n        return this.menus.map(menu => menu.el);\n    }\n    isAnimatingSync() {\n        return this.menus.some(menu => menu.isAnimating);\n    }\n    find(predicate) {\n        const instance = this.menus.find(predicate);\n        if (instance !== undefined) {\n            return instance.el;\n        }\n        return undefined;\n    }\n    waitUntilReady() {\n        return Promise.all(Array.from(document.querySelectorAll('ion-menu'))\n            .map(menu => menu.componentOnReady()));\n    }\n    static get style() { return \".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\n};\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.setVisibility = async () => {\n            this.visible = await updateVisibility(this.menu);\n        };\n        this.onClick = async () => {\n            await toggleMenu(this.menu);\n        };\n    }\n    async componentDidLoad() {\n        await this.setVisibility();\n    }\n    async visibilityChanged() {\n        await this.setVisibility();\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n    static get style() { return \":host(.menu-toggle-hidden){display:none}\"; }\n};\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\n"],"sourceRoot":"webpack:///"}