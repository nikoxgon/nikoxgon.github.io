{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/index-ae28cb4b.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","create","CSS_VALUE_REGEX","TRANSFORM_PROPS","translateX","translateY","translateZ","scale","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skewX","skewY","perspective","win","window","raf","requestAnimationFrame","bind","f","Date","now","Animator","this","_hasDur","_hasTweenEffect","_isAsync","_isReverse","_destroyed","hasChildren","isPlaying","hasCompleted","prototype","addElement","el","length","i","_addEl","nodeType","_elements","push","add","childAnimation","parent","_childAnimations","getDuration","opts","undefined","duration","_duration","isRoot","milliseconds","getEasing","_reversedEasingName","_easingName","easing","name","easingReverse","from","prop","val","_addProp","to","clearProperyAfterTransition","fx","afterClearStyles","trans","fromTo","fromVal","toVal","_getProp","_fxProperties","find","effectName","state","fxProp","shouldTrans","wc","fxState","num","effectUnit","indexOf","match","parseFloat","isNaN","beforeAddClass","className","_beforeAddClasses","beforeRemoveClass","_beforeRemoveClasses","beforeStyles","styles","_beforeStyles","beforeClearStyles","propertyNames","_i","propertyNames_1","beforeAddRead","domReadFn","_readCallbacks","beforeAddWrite","domWriteFn","_writeCallbacks","afterAddClass","_afterAddClasses","afterRemoveClass","_afterRemoveClasses","afterStyles","_afterStyles","propertyNames_2","play","_this","_hasDuration","_clearAsync","_playInit","_playDomInspect","playAsync","Promise","resolve","onFinish","oneTimeCallback","clearExistingCallbacks","playSync","children","children_1","_progress","_willChange","_beforeAnimation","dur","_asyncEnd","_playProgress","_playToStep","children_2","_setTrans","_setAfterStyles","_didFinish","stepValue","children_3","shouldComplete","self","_unregisterTrnsEnd","callback","unRegTrans","passive","unregister","onTransitionEnd","ev","target","_playEnd","_didFinishAll","addEventListener","removeEventListener","transitionEnd","_transEl","_timerId","setTimeout","children_4","children_5","_hasDomReads","children_6","stop","clearTimeout","elements","effects","j","finalTransform","fromNum","toNum","tweenEffect","style","setProperty","forcedLinearEasing","durString","elements_1","transitionDuration","transitionTimingFunction","_fireBeforeReadFunc","_fireBeforeWriteFunc","_setBeforeStyles","children_7","addClasses","removeClasses","_a","elements_2","elementClassList","classList","_b","addClasses_1","_c","removeClasses_1","remove","_d","_e","Object","entries","_f","children_8","readFunctions","readFunctions_1","children_9","writeFunctions","writeFunctions_1","elements_3","beforeAddClasses","beforeAddClasses_1","beforeRemoveClasses","beforeRemoveClasses_1","keys","removeProperty","afterAddClasses","afterAddClasses_1","afterRemoveClasses","afterRemoveClasses_1","_g","_h","_j","addWillChange","willChange","effects_1","propWC","join","elements_4","progressStart","_progressStart","children_10","progressStep","Math","min","max","children_11","progressEnd","currentStepValue","diff","abs","_progressEnd","isAsync","children_12","_onFinishCallbacks","_onFinishOneTimeCallbacks","finishAsyncAnimations","finishNoDurationAnimations","children_13","reverse","shouldReverse","children_14","destroy","children_15","children_16","targetEl","animationBuilder","baseEl"],"mappings":"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","file":"7.e7006ab586b7c2dd1030.js","sourcesContent":["var transitionEnd = function (el, callback) {\n    var unRegTrans;\n    var opts = { passive: true };\n    var unregister = function () {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    var onTransitionEnd = function (ev) {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = function () {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\nvar CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\nvar DURATION_MIN = 32;\nvar TRANSITION_END_FALLBACK_PADDING_MS = 400;\nvar TRANSFORM_PROPS = {\n    'translateX': 1,\n    'translateY': 1,\n    'translateZ': 1,\n    'scale': 1,\n    'scaleX': 1,\n    'scaleY': 1,\n    'scaleZ': 1,\n    'rotate': 1,\n    'rotateX': 1,\n    'rotateY': 1,\n    'rotateZ': 1,\n    'skewX': 1,\n    'skewY': 1,\n    'perspective': 1\n};\nvar win = typeof window !== 'undefined' ? window : {};\nvar raf = win.requestAnimationFrame\n    ? win.requestAnimationFrame.bind(win)\n    : function (f) { return f(Date.now()); };\nvar Animator = /** @class */ (function () {\n    function Animator() {\n        this._hasDur = false;\n        this._hasTweenEffect = false;\n        this._isAsync = false;\n        this._isReverse = false;\n        this._destroyed = false;\n        this.hasChildren = false;\n        this.isPlaying = false;\n        this.hasCompleted = false;\n    }\n    Animator.prototype.addElement = function (el) {\n        if (el != null) {\n            if (el.length > 0) {\n                for (var i = 0; i < el.length; i++) {\n                    this._addEl(el[i]);\n                }\n            }\n            else {\n                this._addEl(el);\n            }\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._addEl = function (el) {\n        if (el.nodeType === 1) {\n            (this._elements = this._elements || []).push(el);\n        }\n    };\n    /**\n     * Add a child animation to this animation.\n     */\n    Animator.prototype.add = function (childAnimation) {\n        childAnimation.parent = this;\n        this.hasChildren = true;\n        (this._childAnimations = this._childAnimations || []).push(childAnimation);\n        return this;\n    };\n    /**\n     * Get the duration of this animation. If this animation does\n     * not have a duration, then it'll get the duration from its parent.\n     */\n    Animator.prototype.getDuration = function (opts) {\n        if (opts && opts.duration !== undefined) {\n            return opts.duration;\n        }\n        else if (this._duration !== undefined) {\n            return this._duration;\n        }\n        else if (this.parent) {\n            return this.parent.getDuration();\n        }\n        return 0;\n    };\n    /**\n     * Returns if the animation is a root one.\n     */\n    Animator.prototype.isRoot = function () {\n        return !this.parent;\n    };\n    /**\n     * Set the duration for this animation.\n     */\n    Animator.prototype.duration = function (milliseconds) {\n        this._duration = milliseconds;\n        return this;\n    };\n    /**\n     * Get the easing of this animation. If this animation does\n     * not have an easing, then it'll get the easing from its parent.\n     */\n    Animator.prototype.getEasing = function () {\n        if (this._isReverse && this._reversedEasingName !== undefined) {\n            return this._reversedEasingName;\n        }\n        return this._easingName !== undefined ? this._easingName : (this.parent && this.parent.getEasing()) || null;\n    };\n    /**\n     * Set the easing for this animation.\n     */\n    Animator.prototype.easing = function (name) {\n        this._easingName = name;\n        return this;\n    };\n    /**\n     * Set the easing for this reversed animation.\n     */\n    Animator.prototype.easingReverse = function (name) {\n        this._reversedEasingName = name;\n        return this;\n    };\n    /**\n     * Add the \"from\" value for a specific property.\n     */\n    Animator.prototype.from = function (prop, val) {\n        this._addProp('from', prop, val);\n        return this;\n    };\n    /**\n     * Add the \"to\" value for a specific property.\n     */\n    Animator.prototype.to = function (prop, val, clearProperyAfterTransition) {\n        if (clearProperyAfterTransition === void 0) { clearProperyAfterTransition = false; }\n        var fx = this._addProp('to', prop, val);\n        if (clearProperyAfterTransition) {\n            // if this effect is a transform then clear the transform effect\n            // otherwise just clear the actual property\n            this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\n        }\n        return this;\n    };\n    /**\n     * Shortcut to add both the \"from\" and \"to\" for the same property.\n     */\n    Animator.prototype.fromTo = function (prop, fromVal, toVal, clearProperyAfterTransition) {\n        return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._getProp = function (name) {\n        if (this._fxProperties) {\n            return this._fxProperties.find(function (prop) { return prop.effectName === name; });\n        }\n        return undefined;\n    };\n    Animator.prototype._addProp = function (state, prop, val) {\n        var fxProp = this._getProp(prop);\n        if (!fxProp) {\n            // first time we've see this EffectProperty\n            var shouldTrans = (TRANSFORM_PROPS[prop] === 1);\n            fxProp = {\n                effectName: prop,\n                trans: shouldTrans,\n                // add the will-change property for transforms or opacity\n                wc: (shouldTrans ? 'transform' : prop)\n            };\n            (this._fxProperties = this._fxProperties || []).push(fxProp);\n        }\n        // add from/to EffectState to the EffectProperty\n        var fxState = {\n            val: val,\n            num: 0,\n            effectUnit: '',\n        };\n        fxProp[state] = fxState;\n        if (typeof val === 'string' && val.indexOf(' ') < 0) {\n            var r = val.match(CSS_VALUE_REGEX);\n            if (r) {\n                var num = parseFloat(r[1]);\n                if (!isNaN(num)) {\n                    fxState.num = num;\n                }\n                fxState.effectUnit = (r[0] !== r[2] ? r[2] : '');\n            }\n        }\n        else if (typeof val === 'number') {\n            fxState.num = val;\n        }\n        return fxProp;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddClass = function (className) {\n        (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeRemoveClass = function (className) {\n        (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeStyles = function (styles) {\n        this._beforeStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeClearStyles = function (propertyNames) {\n        this._beforeStyles = this._beforeStyles || {};\n        for (var _i = 0, propertyNames_1 = propertyNames; _i < propertyNames_1.length; _i++) {\n            var prop = propertyNames_1[_i];\n            this._beforeStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Add a function which contains DOM reads, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddRead = function (domReadFn) {\n        (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\n        return this;\n    };\n    /**\n     * Add a function which contains DOM writes, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddWrite = function (domWriteFn) {\n        (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\n        return this;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterAddClass = function (className) {\n        (this._afterAddClasses = this._afterAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterRemoveClass = function (className) {\n        (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterStyles = function (styles) {\n        this._afterStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterClearStyles = function (propertyNames) {\n        this._afterStyles = this._afterStyles || {};\n        for (var _i = 0, propertyNames_2 = propertyNames; _i < propertyNames_2.length; _i++) {\n            var prop = propertyNames_2[_i];\n            this._afterStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Play the animation.\n     */\n    Animator.prototype.play = function (opts) {\n        var _this = this;\n        // If the animation was already invalidated (it did finish), do nothing\n        if (this._destroyed) {\n            return;\n        }\n        // this is the top level animation and is in full control\n        // of when the async play() should actually kick off\n        // if there is no duration then it'll set the TO property immediately\n        // if there is a duration, then it'll stage all animations at the\n        // FROM property and transition duration, wait a few frames, then\n        // kick off the animation by setting the TO property for each animation\n        this._isAsync = this._hasDuration(opts);\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // recursively kicks off the correct progress step for each child animation\n        // ******** DOM WRITE ****************\n        this._playInit(opts);\n        // doubling up RAFs since this animation was probably triggered\n        // from an input event, and just having one RAF would have this code\n        // run within the same frame as the triggering input event, and the\n        // input event probably already did way too much work for one frame\n        raf(function () {\n            raf(function () {\n                _this._playDomInspect(opts);\n            });\n        });\n    };\n    Animator.prototype.playAsync = function (opts) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.onFinish(resolve, { oneTimeCallback: true, clearExistingCallbacks: true });\n            _this.play(opts);\n            return _this;\n        });\n    };\n    Animator.prototype.playSync = function () {\n        // If the animation was already invalidated (it did finish), do nothing\n        if (!this._destroyed) {\n            var opts = { duration: 0 };\n            this._isAsync = false;\n            this._clearAsync();\n            this._playInit(opts);\n            this._playDomInspect(opts);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playInit = function (opts) {\n        // always default that an animation does not tween\n        // a tween requires that an Animation class has an element\n        // and that it has at least one FROM/TO effect\n        // and that the FROM/TO effect can tween numeric values\n        this._hasTweenEffect = false;\n        this.isPlaying = true;\n        this.hasCompleted = false;\n        this._hasDur = (this.getDuration(opts) > DURATION_MIN);\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                // ******** DOM WRITE ****************\n                child._playInit(opts);\n            }\n        }\n        if (this._hasDur) {\n            // if there is a duration then we want to start at step 0\n            // ******** DOM WRITE ****************\n            this._progress(0);\n            // add the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._playDomInspect = function (opts) {\n        var _this = this;\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        // ******** DOM WRITE ****************\n        this._beforeAnimation();\n        // for the root animation only\n        // set the async TRANSITION END event\n        // and run onFinishes when the transition ends\n        var dur = this.getDuration(opts);\n        if (this._isAsync) {\n            this._asyncEnd(dur, true);\n        }\n        // ******** DOM WRITE ****************\n        this._playProgress(opts);\n        if (this._isAsync && !this._destroyed) {\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            raf(function () {\n                _this._playToStep(1);\n            });\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playProgress = function (opts) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                // ******** DOM WRITE ****************\n                child._playProgress(opts);\n            }\n        }\n        if (this._hasDur) {\n            // set the CSS TRANSITION duration/easing\n            // ******** DOM WRITE ****************\n            this._setTrans(this.getDuration(opts), false);\n        }\n        else {\n            // this animation does not have a duration, so it should not animate\n            // just go straight to the TO properties and call it done\n            // ******** DOM WRITE ****************\n            this._progress(1);\n            // since there was no animation, immediately run the after\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // this animation has no duration, so it has finished\n            // other animations could still be running\n            this._didFinish(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playToStep = function (stepValue) {\n        if (!this._destroyed) {\n            var children = this._childAnimations;\n            if (children) {\n                for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n                    var child = children_3[_i];\n                    // ******** DOM WRITE ****************\n                    child._playToStep(stepValue);\n                }\n            }\n            if (this._hasDur) {\n                // browser had some time to render everything in place\n                // and the transition duration/easing is set\n                // now set the TO properties which will trigger the transition to begin\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._asyncEnd = function (dur, shouldComplete) {\n        var self = this;\n        var onTransitionEnd = function () {\n            // congrats! a successful transition completed!\n            // ensure transition end events and timeouts have been cleared\n            self._clearAsync();\n            // ******** DOM WRITE ****************\n            self._playEnd();\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        var onTransitionFallback = function () {\n            // oh noz! the transition end event didn't fire in time!\n            // instead the fallback timer when first\n            // if all goes well this fallback should never fire\n            // clear the other async end events from firing\n            self._timerId = undefined;\n            self._clearAsync();\n            // set the after styles\n            // ******** DOM WRITE ****************\n            self._playEnd(shouldComplete ? 1 : 0);\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        // set the TRANSITION END event on one of the transition elements\n        self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd);\n        // set a fallback timeout if the transition end event never fires, or is too slow\n        // transition end fallback: (animation duration + XXms)\n        self._timerId = setTimeout(onTransitionFallback, (dur + TRANSITION_END_FALLBACK_PADDING_MS));\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playEnd = function (stepValue) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_4 = children; _i < children_4.length; _i++) {\n                var child = children_4[_i];\n                // ******** DOM WRITE ****************\n                child._playEnd(stepValue);\n            }\n        }\n        if (this._hasDur) {\n            if (stepValue !== undefined) {\n                // too late to have a smooth animation, just finish it\n                // ******** DOM WRITE ****************\n                this._setTrans(0, true);\n                // ensure the ending progress step gets rendered\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n            // set the after styles\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // remove the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(false);\n        }\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDuration = function (opts) {\n        if (this.getDuration(opts) > DURATION_MIN) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_5 = children; _i < children_5.length; _i++) {\n                var child = children_5[_i];\n                if (child._hasDuration(opts)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDomReads = function () {\n        if (this._readCallbacks && this._readCallbacks.length > 0) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_6 = children; _i < children_6.length; _i++) {\n                var child = children_6[_i];\n                if (child._hasDomReads()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Immediately stop at the end of the animation.\n     */\n    Animator.prototype.stop = function (stepValue) {\n        if (stepValue === void 0) { stepValue = 1; }\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        this._hasDur = true;\n        this._playEnd(stepValue);\n    };\n    /**\n     * NO DOM\n     * NO RECURSION\n     */\n    Animator.prototype._clearAsync = function () {\n        if (this._unregisterTrnsEnd) {\n            this._unregisterTrnsEnd();\n        }\n        if (this._timerId) {\n            clearTimeout(this._timerId);\n        }\n        this._timerId = this._unregisterTrnsEnd = undefined;\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._progress = function (stepValue) {\n        // bread 'n butter\n        var val;\n        var elements = this._elements;\n        var effects = this._fxProperties;\n        if (!elements || elements.length === 0 || !effects || this._destroyed) {\n            return;\n        }\n        // flip the number if we're going in reverse\n        if (this._isReverse) {\n            stepValue = 1 - stepValue;\n        }\n        var i = 0;\n        var j = 0;\n        var finalTransform = '';\n        var fx;\n        for (i = 0; i < effects.length; i++) {\n            fx = effects[i];\n            if (fx.from && fx.to) {\n                var fromNum = fx.from.num;\n                var toNum = fx.to.num;\n                var tweenEffect = (fromNum !== toNum);\n                if (tweenEffect) {\n                    this._hasTweenEffect = true;\n                }\n                if (stepValue === 0) {\n                    // FROM\n                    val = fx.from.val;\n                }\n                else if (stepValue === 1) {\n                    // TO\n                    val = fx.to.val;\n                }\n                else if (tweenEffect) {\n                    // EVERYTHING IN BETWEEN\n                    var valNum = (((toNum - fromNum) * stepValue) + fromNum);\n                    var unit = fx.to.effectUnit;\n                    val = valNum + unit;\n                }\n                if (val !== null) {\n                    var prop = fx.effectName;\n                    if (fx.trans) {\n                        finalTransform += prop + '(' + val + ') ';\n                    }\n                    else {\n                        for (j = 0; j < elements.length; j++) {\n                            // ******** DOM WRITE ****************\n                            elements[j].style.setProperty(prop, val);\n                        }\n                    }\n                }\n            }\n        }\n        // place all transforms on the same property\n        if (finalTransform.length > 0) {\n            if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\n                finalTransform += 'translateZ(0px)';\n            }\n            for (i = 0; i < elements.length; i++) {\n                // ******** DOM WRITE ****************\n                elements[i].style.setProperty('transform', finalTransform);\n                elements[i].style.setProperty('-webkit-transform', finalTransform);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._setTrans = function (dur, forcedLinearEasing) {\n        // Transition is not enabled if there are not effects\n        var elements = this._elements;\n        if (!elements || elements.length === 0 || !this._fxProperties) {\n            return;\n        }\n        // set the TRANSITION properties inline on the element\n        var easing = (forcedLinearEasing ? 'linear' : this.getEasing());\n        var durString = dur + 'ms';\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var style = elements_1[_i].style;\n            if (dur > 0) {\n                // ******** DOM WRITE ****************\n                style.transitionDuration = durString;\n                // each animation can have a different easing\n                if (easing !== null) {\n                    // ******** DOM WRITE ****************\n                    style.transitionTimingFunction = easing;\n                }\n            }\n            else {\n                style.transitionDuration = '0';\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._beforeAnimation = function () {\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        this._fireBeforeReadFunc();\n        // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\n        // fire off all the \"before\" function that have DOM WRITES in them\n        // ******** DOM WRITE ****************\n        this._fireBeforeWriteFunc();\n        // stage all of the before css classes and inline styles\n        // ******** DOM WRITE ****************\n        this._setBeforeStyles();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._setBeforeStyles = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_7 = children; _i < children_7.length; _i++) {\n                var child = children_7[_i];\n                child._setBeforeStyles();\n            }\n        }\n        var elements = this._elements;\n        // before the animations have started\n        // only set before styles if animation is not reversed\n        if (!elements || elements.length === 0 || this._isReverse) {\n            return;\n        }\n        var addClasses = this._beforeAddClasses;\n        var removeClasses = this._beforeRemoveClasses;\n        for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\n            var el = elements_2[_a];\n            var elementClassList = el.classList;\n            // css classes to add before the animation\n            if (addClasses) {\n                for (var _b = 0, addClasses_1 = addClasses; _b < addClasses_1.length; _b++) {\n                    var c = addClasses_1[_b];\n                    // ******** DOM WRITE ****************\n                    elementClassList.add(c);\n                }\n            }\n            // css classes to remove before the animation\n            if (removeClasses) {\n                for (var _c = 0, removeClasses_1 = removeClasses; _c < removeClasses_1.length; _c++) {\n                    var c = removeClasses_1[_c];\n                    // ******** DOM WRITE ****************\n                    elementClassList.remove(c);\n                }\n            }\n            // inline styles to add before the animation\n            if (this._beforeStyles) {\n                for (var _d = 0, _e = Object.entries(this._beforeStyles); _d < _e.length; _d++) {\n                    var _f = _e[_d], key = _f[0], value = _f[1];\n                    // ******** DOM WRITE ****************\n                    el.style.setProperty(key, value);\n                }\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeReadFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_8 = children; _i < children_8.length; _i++) {\n                var child = children_8[_i];\n                // ******** DOM READ ****************\n                child._fireBeforeReadFunc();\n            }\n        }\n        var readFunctions = this._readCallbacks;\n        if (readFunctions) {\n            for (var _a = 0, readFunctions_1 = readFunctions; _a < readFunctions_1.length; _a++) {\n                var callback = readFunctions_1[_a];\n                // ******** DOM READ ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeWriteFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_9 = children; _i < children_9.length; _i++) {\n                var child = children_9[_i];\n                // ******** DOM WRITE ****************\n                child._fireBeforeWriteFunc();\n            }\n        }\n        var writeFunctions = this._writeCallbacks;\n        if (writeFunctions) {\n            for (var _a = 0, writeFunctions_1 = writeFunctions; _a < writeFunctions_1.length; _a++) {\n                var callback = writeFunctions_1[_a];\n                // ******** DOM WRITE ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     */\n    Animator.prototype._setAfterStyles = function () {\n        var elements = this._elements;\n        if (!elements) {\n            return;\n        }\n        for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {\n            var el = elements_3[_i];\n            var elementClassList = el.classList;\n            // remove the transition duration/easing\n            // ******** DOM WRITE ****************\n            el.style.transitionDuration = el.style.transitionTimingFunction = '';\n            if (this._isReverse) {\n                // finished in reverse direction\n                // css classes that were added before the animation should be removed\n                var beforeAddClasses = this._beforeAddClasses;\n                if (beforeAddClasses) {\n                    for (var _a = 0, beforeAddClasses_1 = beforeAddClasses; _a < beforeAddClasses_1.length; _a++) {\n                        var c = beforeAddClasses_1[_a];\n                        elementClassList.remove(c);\n                    }\n                }\n                // css classes that were removed before the animation should be added\n                var beforeRemoveClasses = this._beforeRemoveClasses;\n                if (beforeRemoveClasses) {\n                    for (var _b = 0, beforeRemoveClasses_1 = beforeRemoveClasses; _b < beforeRemoveClasses_1.length; _b++) {\n                        var c = beforeRemoveClasses_1[_b];\n                        elementClassList.add(c);\n                    }\n                }\n                // inline styles that were added before the animation should be removed\n                var beforeStyles = this._beforeStyles;\n                if (beforeStyles) {\n                    for (var _c = 0, _d = Object.keys(beforeStyles); _c < _d.length; _c++) {\n                        var propName = _d[_c];\n                        // ******** DOM WRITE ****************\n                        el.style.removeProperty(propName);\n                    }\n                }\n            }\n            else {\n                // finished in forward direction\n                // css classes to add after the animation\n                var afterAddClasses = this._afterAddClasses;\n                if (afterAddClasses) {\n                    for (var _e = 0, afterAddClasses_1 = afterAddClasses; _e < afterAddClasses_1.length; _e++) {\n                        var c = afterAddClasses_1[_e];\n                        // ******** DOM WRITE ****************\n                        elementClassList.add(c);\n                    }\n                }\n                // css classes to remove after the animation\n                var afterRemoveClasses = this._afterRemoveClasses;\n                if (afterRemoveClasses) {\n                    for (var _f = 0, afterRemoveClasses_1 = afterRemoveClasses; _f < afterRemoveClasses_1.length; _f++) {\n                        var c = afterRemoveClasses_1[_f];\n                        // ******** DOM WRITE ****************\n                        elementClassList.remove(c);\n                    }\n                }\n                // inline styles to add after the animation\n                var afterStyles = this._afterStyles;\n                if (afterStyles) {\n                    for (var _g = 0, _h = Object.entries(afterStyles); _g < _h.length; _g++) {\n                        var _j = _h[_g], key = _j[0], value = _j[1];\n                        el.style.setProperty(key, value);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._willChange = function (addWillChange) {\n        var wc;\n        var effects = this._fxProperties;\n        var willChange;\n        if (addWillChange && effects) {\n            wc = [];\n            for (var _i = 0, effects_1 = effects; _i < effects_1.length; _i++) {\n                var effect = effects_1[_i];\n                var propWC = effect.wc;\n                if (propWC === 'webkitTransform') {\n                    wc.push('transform', '-webkit-transform');\n                }\n                else if (propWC !== undefined) {\n                    wc.push(propWC);\n                }\n            }\n            willChange = wc.join(',');\n        }\n        else {\n            willChange = '';\n        }\n        var elements = this._elements;\n        if (elements) {\n            for (var _a = 0, elements_4 = elements; _a < elements_4.length; _a++) {\n                var el = elements_4[_a];\n                // ******** DOM WRITE ****************\n                el.style.setProperty('will-change', willChange);\n            }\n        }\n    };\n    /**\n     * Start the animation with a user controlled progress.\n     */\n    Animator.prototype.progressStart = function () {\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // ******** DOM READ/WRITE ****************\n        this._beforeAnimation();\n        // ******** DOM WRITE ****************\n        this._progressStart();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressStart = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_10 = children; _i < children_10.length; _i++) {\n                var child = children_10[_i];\n                // ******** DOM WRITE ****************\n                child._progressStart();\n            }\n        }\n        // force no duration, linear easing\n        // ******** DOM WRITE ****************\n        this._setTrans(0, true);\n        // ******** DOM WRITE ****************\n        this._willChange(true);\n    };\n    /**\n     * Set the progress step for this animation.\n     * progressStep() is not debounced, so it should not be called faster than 60FPS.\n     */\n    Animator.prototype.progressStep = function (stepValue) {\n        // only update if the last update was more than 16ms ago\n        stepValue = Math.min(1, Math.max(0, stepValue));\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_11 = children; _i < children_11.length; _i++) {\n                var child = children_11[_i];\n                // ******** DOM WRITE ****************\n                child.progressStep(stepValue);\n            }\n        }\n        // ******** DOM WRITE ****************\n        this._progress(stepValue);\n    };\n    /**\n     * End the progress animation.\n     */\n    Animator.prototype.progressEnd = function (shouldComplete, currentStepValue, dur) {\n        var _this = this;\n        if (dur === void 0) { dur = -1; }\n        if (this._isReverse) {\n            // if the animation is going in reverse then\n            // flip the step value: 0 becomes 1, 1 becomes 0\n            currentStepValue = 1 - currentStepValue;\n        }\n        var stepValue = shouldComplete ? 1 : 0;\n        var diff = Math.abs(currentStepValue - stepValue);\n        if (dur < 0) {\n            dur = this._duration || 0;\n        }\n        else if (diff < 0.05) {\n            dur = 0;\n        }\n        this._isAsync = (dur > 30);\n        this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\n        if (this._isAsync) {\n            // for the root animation only\n            // set the async TRANSITION END event\n            // and run onFinishes when the transition ends\n            // ******** DOM WRITE ****************\n            this._asyncEnd(dur, shouldComplete);\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            if (!this._destroyed) {\n                raf(function () {\n                    _this._playToStep(stepValue);\n                });\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressEnd = function (shouldComplete, stepValue, dur, isAsync) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_12 = children; _i < children_12.length; _i++) {\n                var child = children_12[_i];\n                // ******** DOM WRITE ****************\n                child._progressEnd(shouldComplete, stepValue, dur, isAsync);\n            }\n        }\n        if (!isAsync) {\n            // stop immediately\n            // set all the animations to their final position\n            // ******** DOM WRITE ****************\n            this._progress(stepValue);\n            this._willChange(false);\n            this._setAfterStyles();\n            this._didFinish(shouldComplete);\n        }\n        else {\n            // animate it back to it's ending position\n            this.isPlaying = true;\n            this.hasCompleted = false;\n            this._hasDur = true;\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n            this._setTrans(dur, false);\n        }\n    };\n    /**\n     * Add a callback to fire when the animation has finished.\n     */\n    Animator.prototype.onFinish = function (callback, opts) {\n        if (opts && opts.clearExistingCallbacks) {\n            this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\n        }\n        if (opts && opts.oneTimeCallback) {\n            this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\n            this._onFinishOneTimeCallbacks.push(callback);\n        }\n        else {\n            this._onFinishCallbacks = this._onFinishCallbacks || [];\n            this._onFinishCallbacks.push(callback);\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._didFinishAll = function (hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_13 = children; _i < children_13.length; _i++) {\n                var child = children_13[_i];\n                child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\n            }\n        }\n        if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\n            this._didFinish(hasCompleted);\n        }\n    };\n    /**\n     * NO RECURSION\n     */\n    Animator.prototype._didFinish = function (hasCompleted) {\n        this.isPlaying = false;\n        this.hasCompleted = hasCompleted;\n        if (this._onFinishCallbacks) {\n            // run all finish callbacks\n            for (var _i = 0, _a = this._onFinishCallbacks; _i < _a.length; _i++) {\n                var callback = _a[_i];\n                callback(this);\n            }\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            // run all \"onetime\" finish callbacks\n            for (var _b = 0, _c = this._onFinishOneTimeCallbacks; _b < _c.length; _b++) {\n                var callback = _c[_b];\n                callback(this);\n            }\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * Reverse the animation.\n     */\n    Animator.prototype.reverse = function (shouldReverse) {\n        if (shouldReverse === void 0) { shouldReverse = true; }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_14 = children; _i < children_14.length; _i++) {\n                var child = children_14[_i];\n                child.reverse(shouldReverse);\n            }\n        }\n        this._isReverse = !!shouldReverse;\n        return this;\n    };\n    /**\n     * Recursively destroy this animation and all child animations.\n     */\n    Animator.prototype.destroy = function () {\n        this._didFinish(false);\n        this._destroyed = true;\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_15 = children; _i < children_15.length; _i++) {\n                var child = children_15[_i];\n                child.destroy();\n            }\n        }\n        this._clearAsync();\n        if (this._elements) {\n            this._elements.length = 0;\n        }\n        if (this._readCallbacks) {\n            this._readCallbacks.length = 0;\n        }\n        if (this._writeCallbacks) {\n            this._writeCallbacks.length = 0;\n        }\n        this.parent = undefined;\n        if (this._childAnimations) {\n            this._childAnimations.length = 0;\n        }\n        if (this._onFinishCallbacks) {\n            this._onFinishCallbacks.length = 0;\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._transEl = function () {\n        // get the lowest level element that has an Animator\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_16 = children; _i < children_16.length; _i++) {\n                var child = children_16[_i];\n                var targetEl = child._transEl();\n                if (targetEl) {\n                    return targetEl;\n                }\n            }\n        }\n        return (this._hasTweenEffect &&\n            this._hasDur &&\n            this._elements !== undefined &&\n            this._elements.length > 0 ?\n            this._elements[0] : null);\n    };\n    return Animator;\n}());\nvar create = function (animationBuilder, baseEl, opts) {\n    if (animationBuilder) {\n        return animationBuilder(Animator, baseEl, opts);\n    }\n    return Promise.resolve(new Animator());\n};\nexport { create };\n"],"sourceRoot":""}