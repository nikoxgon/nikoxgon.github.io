{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2-ios.entry.js"],"names":[],"mappings":";;yPAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,8CAAA,CAAA,mBAAA,CAAA,yBAAA,sDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,gDAAA,CAAA,mBAAA,CAAA,2BAAA,wDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,+CAAA,CAAA,mBAAA,CAAA,0BAAA,uDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,iDAAA,CAAA,mBAAA,CAAA,4BAAA,yDAAA,CAAA,CAKA,GAAA,CAAA,KAAA,yBACA,eAAA,OAAA,CAAA,gBACQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,CAAgB,OAAhB,EACR,KAAA,OAAA,WAAiC,cAAA,EAAjC,CACA;;WAGA,KAAA,IAAA,CAAA,KAAA,OAAA,CACA;;WAGA,KAAA,QAAA,CAAA,KAAA,CACA;;WAGA,KAAA,OAAA,CAAA,KAAA,CACA,KAAA,OAAA,CAAA,UAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,EACA,CAFA,CAGA,KAAA,MAAA,CAAA,UAAA,CACA,KAAA,CAAA,OAAA,CAAA,IAAA,EACA,CAFA,CAGA,KAAA,OAAA,CAAA,UAAA,CACA,GAAA,KAAA,CAAA,OAAA,CAAA,CACA,KAAA,CAAA,WAAA,CAAA,IAAA,EACA,CAFA,IAGA,CACA,KAAA,CAAA,OAAA,CAAA,IACA,CACA,CAPA,CAQA,KAAA,eAAA,CAA+B,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,iBAAX,CAAW,CAAX,CAA/B,CACA,KAAA,iBAAA,CAAiC,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,mBAAX,CAAW,CAAX,CAAjC,CACA,KAAA,QAAA,CAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,UAAX,CAAW,CAAX,CAAxB,CACA,KAAA,SAAA,CAAyB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,WAAX,CAAW,CAAX,CAAzB,CACA,KAAA,WAAA,CAA2B,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,aAAX,CAAW,CAAX,CAA3B,CACA,KAAA,QAAA,CAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,UAAX,CAAW,CAAX,CAAxB,CACA,KAAA,OAAA,CAAuB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,SAAX,CAAW,CAAX,CACvB,CArCA,kCAsCA,YAtCA,CAsCA,uBAAA,CACA,KAAA,SAAA,EACA,CAxCA,QAyCA,cAzCA,CAyCA,wBAAA,SAAA,CAAA,CACA,GAAA,SAAA,CAAA,CACA,KAAA,SAAA,CAAA,IAAA,CAAA,CACA,OAAA,CAAA,IADA,CAEA,KAAA,CAAA,KAAA,KAFA,CAAA,CAIA,CACA,KAAA,SAAA,EACA,CAjDA,QAkDA,eAlDA,CAkDA,0BAAA,CACA,KAAA,SAAA,EACA,CApDA,QAqDA,iBArDA,CAqDA,4BAAA,CACA,GAAA,KAAA,KAAA,GAAA,SAAA,CAAA,CACA,KAAA,KAAA,CAAA,KAAA,OACA,CACA,KAAA,SAAA,EACA,CA1DA,QA2DA,gBA3DA,CA2DA,2BAAA,CACA,KAAA,eAAA,CAAA,IAAA,EACA,CA7DA,QA8DA,kBA9DA,CA8DA,6BAAA,CACA,KAAA,iBAAA,CAAA,IAAA,EACA,CAhEA,QAiEA,SAjEA,CAiEA,oBAAA,CACA,KAAA,QAAA,CAAA,IAAA,CAAA,CACA,gBAAA,KAAA,OADA,CAEA,uBAAA,KAAA,QAFA,CAAA,CAIA,CAtEA,QAuEA,MAvEA,CAuEA,iBAAA,uBACe,CAAA,OADf,CACuD,IADvD,CACe,OADf,CACe,QADf,CACuD,IADvD,CACe,QADf,CACe,OADf,CACuD,IADvD,CACe,OADf,CACe,KADf,CACuD,IADvD,CACe,KADf,CACe,EADf,CACuD,IADvD,CACe,EADf,CAEA,GAAA,CAAA,IAAA,CAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CACA,GAAA,CAAA,KAAA,CAAsB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,EAAb,CAAtB,CACA,GAAA,KAAA,CAAA,CACA,KAAA,CAAA,EAAA,CAAA,OACA,CACA,MAAgB,CAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,CAAM,CAAG,OAAA,CAAA,KAAA,OAAH,CAAG,IAAA,CAAA,OAAH,CAAG,gBAAA,QAAA,CAAA,MAAA,CAAA,IAAH,CAAG,kBAAqG,OAAxG,CAAgH,kBAAA,OAAhH,CAAgH,QAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAwD,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAkB,KAAlB,CAAxD,mCAAoF,IAApF,EAAoF,IAApF,gBAAoF,SAApF,EAA8G,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,UAAX,CAAW,EAAX,CAA9G,gBAAyH,aAAzH,EAAyH,IAAzH,gBAAyH,eAAzH,EAAyH,OAAzH,gBAAyH,gBAAzH,EAAyH,QAAzH,iBAAhH,CAAN,CAAiV,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,CAAC,CAAS,QAAA,YAAT,CAAD,CAAkC,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,CAAC,CAAS,QAAA,aAAT,CAAD,CAAlC,CAAjV,CAAwZ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,QAAD,CAAC,CAAY,IAAA,CAAA,QAAZ,CAAY,OAAA,CAAA,KAAA,OAAZ,CAAY,MAAA,CAAA,KAAA,MAAZ,CAAY,QAAA,CAAA,QAAZ,CAAD,CAAxZ,CAChB,CAhFA,iDAiFA,CAAc,MAAQ,CAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAiB,CAjFvC,sCAkFA,CAA2B,MAAA,CAC3B,QAAA,CAAA,cAAA,CAD2B,CAE3B,UAAA,CAAA,gBAAA,CAF2B,CAG3B,WAAA,CAAA,iBAAA,CAH2B,CAIrB,CAtFN,iCAuFA,CAAwB,MAAA,+/EAA2gF,CAvFniF,mBAAA,CAyFA,GAAA,CAAA,cAAA,CAAA,CAAA,CAEA,GAAA,CAAA,UAAA,yBACA,oBAAA,OAAA,CAAA,CACQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,CAAgB,OAAhB,EACR,KAAA,OAAA,WAAiC,aAAA,EAAjC,CACA,KAAA,OAAA,CAA0B,KAAA,OAA1B,QACA,KAAA,MAAA,CAAA,EAAA,CACA;;WAGA,KAAA,mBAAA,CAAA,KAAA,CACA;;WAGA,KAAA,IAAA,CAAA,KAAA,OAAA,CACA,KAAA,SAAA,CAAyB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,WAAX,CAAW,CAAX,CACzB,CAfA,yCAgBA,YAhBA,CAgBA,sBAAA,KAAA,CAAA,CACA,KAAA,YAAA,GACA,KAAA,SAAA,CAAA,IAAA,CAAA,CAA6B,KAAA,CAAA,KAA7B,CAAA,CACA,CAnBA,SAoBA,cApBA,CAoBA,wBAAA,EAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,EAAA,CAAA,MAAA,CACA,KAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CACA;AACA,KAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EACA;AACA;AACA;AACA,GAAA,KAAA,KAAA,EAAA,IAAA,EAAA,KAAA,CAAA,OAAA,CAAA,CACA,KAAA,KAAA,CAAA,KAAA,CAAA,KACA,CAFA,IAGA,CACA,KAAA,YAAA,EACA,CACA,CAlCA,SAmCA,gBAnCA,CAmCA,0BAAA,EAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CACA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CACA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CACA,CACA,CAxCA,SAyCA,aAzCA,CAyCA,uBAAA,EAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CACA,GAAA,aAAA,CAAA,CACA,KAAA,KAAA,CAAA,aAAA,CAAA,KACA,CACA,CA9CA,SA+CA,eA/CA,CA+CA,yBAAA,EAAA,CAAA,CACA,GAAA,KAAA,mBAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CACA,GAAA,aAAA,CAAA,CACA,aAAA,CAAA,OAAA,CAAA,KAAA,CACA,KAAA,KAAA,CAAA,SACA,CACA,CACA,CAvDA,SAwDA,gBAxDA,CAwDA,2BAAA,CACA;AACA;AACA,GAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,CACA,MAAA,CAAA,KAAA,EAAA,CAAA,aAAA,CAAA,kBAAA,CACA,CACA,GAAA,MAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,aAAA,CAAA,WAAA,CAAA,CACA,GAAA,KAAA,CAAA,CACA,KAAA,OAAA,CAAA,KAAA,CAAA,EAAA,CAAA,KAAA,IAAA,CAAA,MACA,CACA,CACA,KAAA,YAAA,EACA,CAtEA,SAuEA,YAvEA,CAuEA,uBAAA,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,KAAA,CACA,GAAA,CAAA,UAAA,CAAA,KAAA,CACA,kBAAA,KAAA,MAAA,oGAAA,qIAAA,CAAA,KAAA,MACA,GAAA,CAAA,UAAA,EAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,CACA;AACA;AACA;AACA,UAAA,CAAA,IAAA,CACA,KAAA,CAAA,OAAA,CAAA,IACA,CANA,IAOA,CACA;AACA;AACA,KAAA,CAAA,OAAA,CAAA,KACA,CACA,CACA,CAxFA,SAyFA,MAzFA,CAyFA,iBAAA,CACA,MAAgB,CAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,CAAM,CAAG,IAAA,CAAA,YAAH,CAAG,kBAAA,KAAA,OAAH,CAAG,QAA6D,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAhE,CAAN,CAChB,CA3FA,sDA4FA,CAAc,MAAQ,CAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAiB,CA5FvC,sCA6FA,CAA2B,MAAA,CAC3B,QAAA,CAAA,cAAA,CAD2B,CAErB,CA/FN,wBAAA,CAiGA,GAAA,CAAA,aAAA,CAAA,CAAA,C","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-13ed1ad7.js';\nimport './config-bb99b659.js';\nimport { c as createColorClasses, h as hostContext } from './theme-353a032e.js';\nimport { f as findItemLabel } from './helpers-c90aaa66.js';\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = () => {\n            if (this.checked) {\n                this.ionDeselect.emit();\n            }\n            else {\n                this.checked = true;\n            }\n        };\n        this.ionRadioDidLoad = createEvent(this, \"ionRadioDidLoad\", 7);\n        this.ionRadioDidUnload = createEvent(this, \"ionRadioDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionDeselect = createEvent(this, \"ionDeselect\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    colorChanged() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        if (isChecked) {\n            this.ionSelect.emit({\n                checked: true,\n                value: this.value\n            });\n        }\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        this.emitStyle();\n    }\n    componentDidLoad() {\n        this.ionRadioDidLoad.emit();\n    }\n    componentDidUnload() {\n        this.ionRadioDidUnload.emit();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { onClick: this.onClick, role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign({}, createColorClasses(color), { [mode]: true, 'in-item': hostContext('ion-item', el), 'interactive': true, 'radio-checked': checked, 'radio-disabled': disabled }) }, h(\"div\", { class: \"radio-icon\" }, h(\"div\", { class: \"radio-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"colorChanged\"],\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;contain:layout size style}.radio-icon,button{width:100%;height:100%}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary,#3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:.3}:host(.ion-focused) .radio-icon:after{border-radius:50%;left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint,#4c8dff);content:\\\"\\\";opacity:.2}:host-context([dir=rtl]).ion-focused .radio-icon:after,:host-context([dir=rtl]):host(.ion-focused) .radio-icon:after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:8px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\"; }\n};\nlet radioButtonIds = 0;\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        this.radios = [];\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n    }\n    valueChanged(value) {\n        this.updateRadios();\n        this.ionChange.emit({ value });\n    }\n    onRadioDidLoad(ev) {\n        const radio = ev.target;\n        radio.name = this.name;\n        // add radio to internal list\n        this.radios.push(radio);\n        // this radio-group does not have a value\n        // but this radio is checked, so let's set the\n        // radio-group's value from the checked radio\n        if (this.value == null && radio.checked) {\n            this.value = radio.value;\n        }\n        else {\n            this.updateRadios();\n        }\n    }\n    onRadioDidUnload(ev) {\n        const index = this.radios.indexOf(ev.target);\n        if (index > -1) {\n            this.radios.splice(index, 1);\n        }\n    }\n    onRadioSelect(ev) {\n        const selectedRadio = ev.target;\n        if (selectedRadio) {\n            this.value = selectedRadio.value;\n        }\n    }\n    onRadioDeselect(ev) {\n        if (this.allowEmptySelection) {\n            const selectedRadio = ev.target;\n            if (selectedRadio) {\n                selectedRadio.checked = false;\n                this.value = undefined;\n            }\n        }\n    }\n    componentDidLoad() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        let header = this.el.querySelector('ion-list-header');\n        if (!header) {\n            header = this.el.querySelector('ion-item-divider');\n        }\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n        this.updateRadios();\n    }\n    updateRadios() {\n        const value = this.value;\n        let hasChecked = false;\n        for (const radio of this.radios) {\n            if (!hasChecked && radio.value === value) {\n                // correct value for this radio\n                // but this radio isn't checked yet\n                // and we haven't found a checked yet\n                hasChecked = true;\n                radio.checked = true;\n            }\n            else {\n                // this radio doesn't have the correct value\n                // or the radio group has been already checked\n                radio.checked = false;\n            }\n        }\n    }\n    render() {\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"sourceRoot":"webpack:///"}