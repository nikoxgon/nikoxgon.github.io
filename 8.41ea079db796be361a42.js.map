{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/input-shims-7b87c414.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","startInputShims","_helpers_c90aaa66_js__WEBPACK_IMPORTED_MODULE_0__","cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","tx","ownerDocument","dir","style","pointerEvents","transform","clone","get","delete","remove","SKIP_SELECTOR","setScrollPadding","keyboardHeight","tagName","parentElement","el","closest","timer","clearTimeout","setProperty","setTimeout","config","doc","document","getNumber","scrollAssist","getBoolean","hideCaret","inputBlurring","scrollPadding","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","shadowRoot","querySelector","scrollEl","rmFn","scrollHideCaret","shouldHideCaret","onBlur","showCaret","addEventListener","removeEventListener","enableHideCaretOnScroll","contentEl","coord","touchStart","ev","Object","touchEnd","threshold","startCoord","endCoord","deltaX","x","deltaY","y","hasPointerMoved","preventDefault","stopPropagation","scrollData","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","safeAreaTop","distanceToBottom","Math","min","defaultView","innerHeight","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","scrollDuration","max","inputSafeY","calcScrollData","getBoundingClientRect","getScrollData","focus","scrollByPoint","then","jsSetFocus","enableScrollAssist","focused","didScroll","active","matches","tapped","target","blur","enableInputBlurring","enableScrollPadding","_i","inputs_1","length","detail","fn"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,oCAAAE,IAAA,IAAAC,EAAAL,EAAA,QACIM,EAAW,IAAIC,QACfC,EAAgB,SAAUC,EAAaC,EAASC,EAAgBC,QACzC,IAAnBA,IAA6BA,EAAiB,GAC9CN,EAASO,IAAIJ,KAAiBE,IAG9BA,EACAG,EAASL,EAAaC,EAASE,GAG/BG,EAAYN,EAAaC,KAG7BM,EAAY,SAAUC,GACtB,OAAOA,IAAUA,EAAMC,cAAcC,eAErCL,EAAW,SAAUL,EAAaC,EAASE,GAU3C,IAAIQ,EAAWV,EAAQW,WAEnBC,EAAWZ,EAAQa,WAAU,GACjCD,EAASE,UAAUC,IAAI,gBACvBH,EAASI,UAAY,EACrBN,EAASO,YAAYL,GACrBhB,EAASsB,IAAInB,EAAaa,GAC1B,IACIO,EAAiB,QADXpB,EAAYqB,cACTC,IAAgB,MAAQ,KACrCtB,EAAYuB,MAAMC,cAAgB,OAClCvB,EAAQsB,MAAME,UAAY,eAAiBL,EAAK,MAAQjB,EAAiB,kBAEzEG,EAAc,SAAUN,EAAaC,GACrC,IAAIyB,EAAQ7B,EAAS8B,IAAI3B,GACrB0B,IACA7B,EAAS+B,OAAO5B,GAChB0B,EAAMG,UAEV7B,EAAYuB,MAAMC,cAAgB,GAClCvB,EAAQsB,MAAME,UAAY,IAuB1BK,EAAgB,6BAkKhBC,EAAmB,SAAUvB,EAAOwB,GACpC,GAAsB,UAAlBxB,EAAMyB,WAGNzB,EAAM0B,eAAiD,cAAhC1B,EAAM0B,cAAcD,SAG3CzB,EAAM0B,eACN1B,EAAM0B,cAAcA,eAC0B,kBAA9C1B,EAAM0B,cAAcA,cAAcD,SAFtC,CAKA,IAAIE,EAAK3B,EAAM4B,QAAQ,eACvB,GAAW,OAAPD,EAAJ,CAGA,IAAIE,EAAQF,EAAoB,iBAC5BE,GACAC,aAAaD,GAEbL,EAAiB,EACjBG,EAAGZ,MAAMgB,YAAY,oBAAqBP,EAAiB,MAG3DG,EAAoB,iBAAIK,WAAW,WAC/BL,EAAGZ,MAAMgB,YAAY,oBAAqB,QAC3C,QAKP5C,EAAkB,SAAU8C,GAC5B,IAAIC,EAAMC,SACNX,EAAiBS,EAAOG,UAAU,iBAAkB,KACpDC,EAAeJ,EAAOK,WAAW,gBAAgB,GACjDC,EAAYN,EAAOK,WAAW,qBAAqB,GACnDE,EAAgBP,EAAOK,WAAW,iBAAiB,GACnDG,EAAgBR,EAAOK,WAAW,iBAAiB,GACnDI,EAASC,MAAMC,KAAKV,EAAIW,iBAAiB,4BACzCC,EAAe,IAAIxD,QACnByD,EAAkB,IAAIzD,QACtB0D,EAAgB,SAAUxD,GAC1B,IAAIC,GAAWD,EAAYyD,YAAczD,GAAa0D,cAAc,WAAa1D,EAAYyD,YAAczD,GAAa0D,cAAc,YAClIC,EAAW3D,EAAYoC,QAAQ,eACnC,GAAKnC,EAAL,CAGA,GAAM0D,GAAYZ,IAAcO,EAAalD,IAAIJ,GAAc,CAC3D,IAAI4D,EAvOc,SAAU5D,EAAaC,EAAS0D,GAC1D,IAAKA,IAAa1D,EACd,OAAO,aAEX,IAAI4D,EAAkB,SAAUC,GACxBvD,EAAUN,IACVF,EAAcC,EAAaC,EAAS6D,IAGxCC,EAAS,WAAc,OAAOhE,EAAcC,EAAaC,GAAS,IAClE8C,EAAY,WAAc,OAAOc,GAAgB,IACjDG,EAAY,WAAc,OAAOH,GAAgB,IAIrD,OAHAF,EAASM,iBAAiB,iBAAkBlB,GAC5CY,EAASM,iBAAiB,eAAgBD,GAC1C/D,EAAQgE,iBAAiB,OAAQF,GAC1B,WACHJ,EAASO,oBAAoB,iBAAkBnB,GAC/CY,EAASO,oBAAoB,eAAgBF,GAC7C/D,EAAQgE,iBAAiB,UAAWF,IAqNrBI,CAAwBnE,EAAaC,EAAS0D,GACzDL,EAAanC,IAAInB,EAAa4D,GAE5BD,GAAYd,IAAiBU,EAAgBnD,IAAIJ,KAC/C4D,EA/HS,SAAU5D,EAAaC,EAASmE,EAAWpC,GAChE,IAAIqC,EACAC,EAAa,SAAUC,GACvBF,EAAQG,OAAA5E,EAAA,EAAA4E,CAAaD,IAErBE,EAAW,SAAUF,GAEhBF,IA2CS,SAAUK,EAAWC,EAAYC,GACnD,GArC4BP,GAqCVO,EAAU,CACxB,IAAIC,EAtCoBR,EAsCCS,EAAIF,EAASE,EAClCC,EAvCoBV,EAuCCW,EAAIJ,EAASI,EAEtC,OADeH,EAASA,EAASE,EAASA,EACxB,GAEtB,OAAO,EA3CEE,CAAgB,EAAGZ,EAHTG,OAAA5E,EAAA,EAAA4E,CAAaD,KAGiBhE,EAAUN,KACnDsE,EAAGW,iBACHX,EAAGY,kBAYE,SAAUnF,EAAaC,EAASmE,EAAWpC,GACxD,IAAIoD,EAjEY,SAAUpF,EAAaoE,EAAWpC,GAElD,OAEiB,SAAUqD,EAAWC,EAAatD,EAAgBuD,GAEnE,IAAIC,EAAWH,EAAUI,IACrBC,EAAcL,EAAUM,OAExBC,EAAiBN,EAAYG,IAG7BI,EAAcD,EAAiB,GAG/BE,EAFqC,GAHjBC,KAAKC,IAAIV,EAAYK,OAR4D3F,EAAYqB,cAAc4E,YAAYC,YAQzElE,GAK9B0D,EACpCS,EAAgBN,EAAcL,EAE9BY,EAAsBL,KAAKM,MAAOP,EAAmB,GAClDA,EACAK,EAAgB,GACZA,EACD,GAGNG,EAAeP,KAAKC,IAAII,EAAqBZ,EAAWI,GACxDW,EAAWR,KAAKS,IAAIF,GAGxB,MAAO,CACHA,aAAcA,EACdG,eAHiBV,KAAKC,IAAI,IAAKD,KAAKW,IAAI,IAD7BH,EA5BO,KAiClBtD,cAAejB,EACf2E,WAAwC,GAA1BnB,EAAWK,IA/BtBe,EADM5G,EAAYoC,QAAQ,wBAA0BpC,GAC9B6G,wBAAyBzC,EAAUyC,wBAAyB7E,GA+DxE8E,CAAc9G,EAAaoE,EAAWpC,GACnD+D,KAAKS,IAAIpB,EAAWkB,cAAgB,EAGpCrG,EAAQ8G,SAMZhH,EAAcC,EAAaC,GAAS,EAAMmF,EAAWuB,YACrD1G,EAAQ8G,QAER3C,EAAU4C,cAAc,EAAG5B,EAAWkB,aAAclB,EAAWqB,gBAAgBQ,KAAK,WAGhFlH,EAAcC,EAAaC,GAAS,EAAOmF,EAAWuB,YAEtD1G,EAAQ8G,WA7BJG,CAAWlH,EAAaC,EAASmE,EAAWpC,MAKpD,OAFAhC,EAAYiE,iBAAiB,aAAcK,GAAY,GACvDtE,EAAYiE,iBAAiB,WAAYQ,GAAU,GAC5C,WACHzE,EAAYkE,oBAAoB,aAAcI,GAAY,GAC1DtE,EAAYkE,oBAAoB,WAAYO,GAAU,IAsGvC0C,CAAmBnH,EAAaC,EAAS0D,EAAU3B,GAC9DuB,EAAgBpC,IAAInB,EAAa4D,MAmBrCZ,GAzOkB,WACtB,IAAIoE,GAAU,EACVC,GAAY,EACZ3E,EAAMC,SAqCVD,EAAIuB,iBAAiB,iBApCN,WACXoD,GAAY,IAoChB3E,EAAIuB,iBAAiB,UAlCL,WACZmD,GAAU,IAiC6B,GAC3C1E,EAAIuB,iBAAiB,WAhCJ,SAAUM,GAEvB,GAAI8C,EACAA,GAAY,MADhB,CAIA,IAAIC,EAAS5E,EAAIhC,cACjB,GAAK4G,IAIDA,EAAOC,QAAQzF,GAAnB,CAIA,IAAI0F,EAASjD,EAAGkD,OACZD,IAAWF,IAGXE,EAAOD,QAAQzF,IAAkB0F,EAAOpF,QAAQN,KAGpDsF,GAAU,EAEV5E,WAAW,WACF4E,GACDE,EAAOI,QAEZ,UAIsC,GAgMzCC,GAEA1E,GA1FkB,SAAUjB,GAChC,IAAIU,EAAMC,SAOVD,EAAIuB,iBAAiB,UANL,SAAUM,GACtBxC,EAAiBwC,EAAGkD,OAAQzF,KAMhCU,EAAIuB,iBAAiB,WAJJ,SAAUM,GACvBxC,EAAiBwC,EAAGkD,OAAQ,KAqF5BG,CAAoB5F,GAKxB,IAAK,IAAI6F,EAAK,EAAGC,EAAW5E,EAAQ2E,EAAKC,EAASC,OAAQF,IAEtDrE,EADYsE,EAASD,IAGzBnF,EAAIuB,iBAAiB,kBAAmB,SAAWM,GAC/Cf,EAAce,EAAGyD,UAErBtF,EAAIuB,iBAAiB,oBAAqB,SAAWM,GAhC/B,IAAUvE,EASpBiI,EAToBjI,EAiCZuE,EAAGyD,OAhCfjF,KACIkF,EAAK3E,EAAa3B,IAAI3B,KAEtBiI,IAEJ3E,EAAa1B,OAAO5B,IAEpB6C,KACIoF,EAAK1E,EAAgB5B,IAAI3B,KAEzBiI,IAEJ1E,EAAgB3B,OAAO5B","file":"8.41ea079db796be361a42.js","sourcesContent":["import { p as pointerCoord } from './helpers-c90aaa66.js';\nvar cloneMap = new WeakMap();\nvar relocateInput = function (componentEl, inputEl, shouldRelocate, inputRelativeY) {\n    if (inputRelativeY === void 0) { inputRelativeY = 0; }\n    if (cloneMap.has(componentEl) === shouldRelocate) {\n        return;\n    }\n    if (shouldRelocate) {\n        addClone(componentEl, inputEl, inputRelativeY);\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n};\nvar isFocused = function (input) {\n    return input === input.getRootNode().activeElement;\n};\nvar addClone = function (componentEl, inputEl, inputRelativeY) {\n    // this allows for the actual input to receive the focus from\n    // the user's touch event, but before it receives focus, it\n    // moves the actual input to a location that will not screw\n    // up the app's layout, and does not allow the native browser\n    // to attempt to scroll the input into place (messing up headers/footers)\n    // the cloned input fills the area of where native input should be\n    // while the native input fakes out the browser by relocating itself\n    // before it receives the actual focus event\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\n    var parentEl = inputEl.parentNode;\n    // DOM WRITES\n    var clonedEl = inputEl.cloneNode(false);\n    clonedEl.classList.add('cloned-input');\n    clonedEl.tabIndex = -1;\n    parentEl.appendChild(clonedEl);\n    cloneMap.set(componentEl, clonedEl);\n    var doc = componentEl.ownerDocument;\n    var tx = doc.dir === 'rtl' ? 9999 : -9999;\n    componentEl.style.pointerEvents = 'none';\n    inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0) scale(0)\";\n};\nvar removeClone = function (componentEl, inputEl) {\n    var clone = cloneMap.get(componentEl);\n    if (clone) {\n        cloneMap.delete(componentEl);\n        clone.remove();\n    }\n    componentEl.style.pointerEvents = '';\n    inputEl.style.transform = '';\n};\nvar enableHideCaretOnScroll = function (componentEl, inputEl, scrollEl) {\n    if (!scrollEl || !inputEl) {\n        return function () { return; };\n    }\n    var scrollHideCaret = function (shouldHideCaret) {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    var onBlur = function () { return relocateInput(componentEl, inputEl, false); };\n    var hideCaret = function () { return scrollHideCaret(true); };\n    var showCaret = function () { return scrollHideCaret(false); };\n    scrollEl.addEventListener('ionScrollStart', hideCaret);\n    scrollEl.addEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return function () {\n        scrollEl.removeEventListener('ionScrollStart', hideCaret);\n        scrollEl.removeEventListener('ionScrollEnd', showCaret);\n        inputEl.addEventListener('ionBlur', onBlur);\n    };\n};\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\nvar enableInputBlurring = function () {\n    var focused = true;\n    var didScroll = false;\n    var doc = document;\n    var onScroll = function () {\n        didScroll = true;\n    };\n    var onFocusin = function () {\n        focused = true;\n    };\n    var onTouchend = function (ev) {\n        // if app did scroll return early\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        var active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        // only blur if the active element is a text-input or a textarea\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        // if the selected target is the active element, do not blur\n        var tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        focused = false;\n        // TODO: find a better way, why 50ms?\n        setTimeout(function () {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    };\n    doc.addEventListener('ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return function () {\n        doc.removeEventListener('ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n};\nvar SCROLL_ASSIST_SPEED = 0.3;\nvar getScrollData = function (componentEl, contentEl, keyboardHeight) {\n    var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nvar calcScrollData = function (inputRect, contentRect, keyboardHeight, platformHeight) {\n    // compute input's Y values relative to the body\n    var inputTop = inputRect.top;\n    var inputBottom = inputRect.bottom;\n    // compute visible area\n    var visibleAreaTop = contentRect.top;\n    var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n    // compute safe area\n    var safeAreaTop = visibleAreaTop + 15;\n    var safeAreaBottom = visibleAreaBottom * 0.5;\n    // figure out if each edge of the input is within the safe area\n    var distanceToBottom = safeAreaBottom - inputBottom;\n    var distanceToTop = safeAreaTop - inputTop;\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n    var desiredScrollAmount = Math.round((distanceToBottom < 0)\n        ? -distanceToBottom\n        : (distanceToTop > 0)\n            ? -distanceToTop\n            : 0);\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n    // gets focus, so make sure we don't scroll the input above the visible area\n    var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n    var distance = Math.abs(scrollAmount);\n    var duration = distance / SCROLL_ASSIST_SPEED;\n    var scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount: scrollAmount,\n        scrollDuration: scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4\n    };\n};\nvar enableScrollAssist = function (componentEl, inputEl, contentEl, keyboardHeight) {\n    var coord;\n    var touchStart = function (ev) {\n        coord = pointerCoord(ev);\n    };\n    var touchEnd = function (ev) {\n        // input cover touchend/mouseup\n        if (!coord) {\n            return;\n        }\n        // get where the touchend/mouseup ended\n        var endCoord = pointerCoord(ev);\n        // focus this input if the pointer hasn't moved XX pixels\n        // and the input doesn't already have focus\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // begin the input focus process\n            jsSetFocus(componentEl, inputEl, contentEl, keyboardHeight);\n        }\n    };\n    componentEl.addEventListener('touchstart', touchStart, true);\n    componentEl.addEventListener('touchend', touchEnd, true);\n    return function () {\n        componentEl.removeEventListener('touchstart', touchStart, true);\n        componentEl.removeEventListener('touchend', touchEnd, true);\n    };\n};\nvar jsSetFocus = function (componentEl, inputEl, contentEl, keyboardHeight) {\n    var scrollData = getScrollData(componentEl, contentEl, keyboardHeight);\n    if (Math.abs(scrollData.scrollAmount) < 4) {\n        // the text input is in a safe position that doesn't\n        // require it to be scrolled into view, just set focus now\n        inputEl.focus();\n        return;\n    }\n    // temporarily move the focus to the focus holder so the browser\n    // doesn't freak out while it's trying to get the input in place\n    // at this point the native text input still does not have focus\n    relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n    inputEl.focus();\n    // scroll the input into place\n    contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration).then(function () {\n        // the scroll view is in the correct position now\n        // give the native text input focus\n        relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n        // ensure this is the focused input\n        inputEl.focus();\n    });\n};\nvar hasPointerMoved = function (threshold, startCoord, endCoord) {\n    if (startCoord && endCoord) {\n        var deltaX = (startCoord.x - endCoord.x);\n        var deltaY = (startCoord.y - endCoord.y);\n        var distance = deltaX * deltaX + deltaY * deltaY;\n        return distance > (threshold * threshold);\n    }\n    return false;\n};\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\nvar enableScrollPadding = function (keyboardHeight) {\n    var doc = document;\n    var onFocusin = function (ev) {\n        setScrollPadding(ev.target, keyboardHeight);\n    };\n    var onFocusout = function (ev) {\n        setScrollPadding(ev.target, 0);\n    };\n    doc.addEventListener('focusin', onFocusin);\n    doc.addEventListener('focusout', onFocusout);\n    return function () {\n        doc.removeEventListener('focusin', onFocusin);\n        doc.removeEventListener('focusout', onFocusout);\n    };\n};\nvar setScrollPadding = function (input, keyboardHeight) {\n    if (input.tagName !== 'INPUT') {\n        return;\n    }\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n        return;\n    }\n    if (input.parentElement &&\n        input.parentElement.parentElement &&\n        input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n        return;\n    }\n    var el = input.closest('ion-content');\n    if (el === null) {\n        return;\n    }\n    var timer = el[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (keyboardHeight > 0) {\n        el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\n    }\n    else {\n        el[PADDING_TIMER_KEY] = setTimeout(function () {\n            el.style.setProperty('--keyboard-offset', '0px');\n        }, 120);\n    }\n};\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\nvar startInputShims = function (config) {\n    var doc = document;\n    var keyboardHeight = config.getNumber('keyboardHeight', 290);\n    var scrollAssist = config.getBoolean('scrollAssist', true);\n    var hideCaret = config.getBoolean('hideCaretOnScroll', true);\n    var inputBlurring = config.getBoolean('inputBlurring', true);\n    var scrollPadding = config.getBoolean('scrollPadding', true);\n    var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n    var hideCaretMap = new WeakMap();\n    var scrollAssistMap = new WeakMap();\n    var registerInput = function (componentEl) {\n        var inputEl = (componentEl.shadowRoot || componentEl).querySelector('input') || (componentEl.shadowRoot || componentEl).querySelector('textarea');\n        var scrollEl = componentEl.closest('ion-content');\n        if (!inputEl) {\n            return;\n        }\n        if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n            var rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n            hideCaretMap.set(componentEl, rmFn);\n        }\n        if (!!scrollEl && scrollAssist && !scrollAssistMap.has(componentEl)) {\n            var rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, keyboardHeight);\n            scrollAssistMap.set(componentEl, rmFn);\n        }\n    };\n    var unregisterInput = function (componentEl) {\n        if (hideCaret) {\n            var fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if (scrollAssist) {\n            var fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    };\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring();\n    }\n    if (scrollPadding && SCROLL_PADDING) {\n        enableScrollPadding(keyboardHeight);\n    }\n    // Input might be already loaded in the DOM before ion-device-hacks did.\n    // At this point we need to look for all of the inputs not registered yet\n    // and register them.\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        registerInput(input);\n    }\n    doc.addEventListener('ionInputDidLoad', (function (ev) {\n        registerInput(ev.detail);\n    }));\n    doc.addEventListener('ionInputDidUnload', (function (ev) {\n        unregisterInput(ev.detail);\n    }));\n};\nexport { startInputShims };\n"],"sourceRoot":""}