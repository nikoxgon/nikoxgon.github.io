{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-input-ios.entry.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Input","tslib__WEBPACK_IMPORTED_MODULE_0__","_core_5ba38749_js__WEBPACK_IMPORTED_MODULE_1__","_theme_353a032e_js__WEBPACK_IMPORTED_MODULE_3__","_helpers_c90aaa66_js__WEBPACK_IMPORTED_MODULE_4__","class_1","hostRef","_this","this","Object","inputId","inputIds","didBlurAfterEdit","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","ionInput","emit","onBlur","focusChanged","emitStyle","ionBlur","onFocus","ionFocus","onKeydown","shouldClearOnEdit","hasValue","clearTextInput","preventDefault","stopPropagation","nativeInput","ionChange","ionInputDidLoad","ionInputDidUnload","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","connectedCallback","el","dispatchEvent","CustomEvent","detail","disconnectedCallback","document","setFocus","_a","focus","getInputElement","Promise","resolve","clearOnEdit","undefined","getValue","interactive","has-placeholder","placeholder","has-value","has-focus","interactive-disabled","length","render","mode","labelId","label","id","aria-disabled","class","assign","color","ref","aria-labelledby","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","spellCheck","step","size","onKeyDown","tabindex","onTouchStart","onMouseDown","defineProperty","get","enumerable","configurable"],"mappings":"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","file":"54.9856435c8229f1500e12.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-5ba38749.js';\nimport './config-6ccf652f.js';\nimport { c as createColorClasses } from './theme-353a032e.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-c90aaa66.js';\nvar Input = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-input-\" + inputIds++;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = function (ev) {\n            var input = ev.target;\n            if (input) {\n                _this.value = input.value || '';\n            }\n            _this.ionInput.emit(ev);\n        };\n        this.onBlur = function () {\n            _this.hasFocus = false;\n            _this.focusChanged();\n            _this.emitStyle();\n            _this.ionBlur.emit();\n        };\n        this.onFocus = function () {\n            _this.hasFocus = true;\n            _this.focusChanged();\n            _this.emitStyle();\n            _this.ionFocus.emit();\n        };\n        this.onKeydown = function () {\n            if (_this.shouldClearOnEdit()) {\n                // Did the input value change after it was blurred and edited?\n                if (_this.didBlurAfterEdit && _this.hasValue()) {\n                    // Clear the input\n                    _this.clearTextInput();\n                }\n                // Reset the flag\n                _this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextInput = function (ev) {\n            if (_this.clearInput && !_this.readonly && !_this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            _this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (_this.nativeInput) {\n                _this.nativeInput.value = '';\n            }\n        };\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionInputDidLoad = createEvent(this, \"ionInputDidLoad\", 7);\n        this.ionInputDidUnload = createEvent(this, \"ionInputDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    class_1.prototype.debounceChanged = function () {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    /**\n     * Update the native input element when the value changes\n     */\n    class_1.prototype.valueChanged = function () {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value });\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    };\n    /**\n     * Sets focus on the specified `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    class_1.prototype.setFocus = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.focus();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    class_1.prototype.getInputElement = function () {\n        return Promise.resolve(this.nativeInput);\n    };\n    class_1.prototype.shouldClearOnEdit = function () {\n        var _a = this, type = _a.type, clearOnEdit = _a.clearOnEdit;\n        return (clearOnEdit === undefined)\n            ? type === 'password'\n            : clearOnEdit;\n    };\n    class_1.prototype.getValue = function () {\n        return this.value || '';\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    class_1.prototype.focusChanged = function () {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    };\n    class_1.prototype.hasValue = function () {\n        return this.getValue().length > 0;\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var mode = getIonMode(this);\n        var value = this.getValue();\n        var labelId = this.inputId + '-lbl';\n        var label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['has-value'] = this.hasValue(), _a['has-focus'] = this.hasFocus, _a)) }, h(\"input\", { class: \"native-input\", ref: function (input) { return _this.nativeInput = input; }, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { type: \"button\", class: \"input-clear-icon\", tabindex: \"-1\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput })));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"debounce\": [\"debounceChanged\"],\n                \"disabled\": [\"disabledChanged\"],\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0!important;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:50%;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h button.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-input-ios-h, .item-label-floating .sc-ion-input-ios-h, .item-label-stacked.sc-ion-input-ios-h, .item-label-stacked .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20viewBox=\\'0%200%20512%20512\\'><path%20fill=\\'var(--ion-color-step-600,%20%23666666)\\'%20d=\\'M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z\\'/></svg>\\\");width:30px;height:30px;background-size:18px}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar inputIds = 0;\nexport { Input as ion_input };\n"],"sourceRoot":""}