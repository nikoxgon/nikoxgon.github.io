{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-split-pane-ios.entry.js.pre-build-optimizer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","SplitPane","_core_5ba38749_js__WEBPACK_IMPORTED_MODULE_0__","QUERY","xs","sm","md","lg","xl","never","class_1","hostRef","Object","this","visible","disabled","when","ionSplitPaneVisible","prototype","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","console","warn","setPaneClass","render","_a","mode","class","defineProperty","get","enumerable","configurable","toAdd","toRemove","add","remove"],"mappings":"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","file":"90.e38fee4425dd5552e786.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-5ba38749.js';\nimport './config-6ccf652f.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nvar SplitPane = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    class_1.prototype.visibleChanged = function (visible) {\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.styleChildren();\n        this.updateState();\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    };\n    class_1.prototype.updateState = function () {\n        var _this = this;\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        var query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        var mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            var callback_1 = function (q) {\n                _this.visible = q.matches;\n            };\n            var mediaList_1 = window.matchMedia(mediaQuery);\n            mediaList_1.addListener(callback_1);\n            this.rmL = function () { return mediaList_1.removeListener(callback_1); };\n            this.visible = mediaList_1.matches;\n        }\n    };\n    class_1.prototype.isPane = function (element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    };\n    class_1.prototype.styleChildren = function () {\n        var contentId = this.contentId;\n        var children = this.el.children;\n        var nu = this.el.childElementCount;\n        var foundMain = false;\n        for (var i = 0; i < nu; i++) {\n            var child = children[i];\n            var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { class: (_a = {},\n                _a[mode] = true,\n                // Used internally for styling\n                _a[\"split-pane-\" + mode] = true,\n                _a['split-pane-visible'] = this.visible,\n                _a) }));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"visible\": [\"visibleChanged\"],\n                \"disabled\": [\"updateState\"],\n                \"when\": [\"updateState\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar setPaneClass = function (el, isMain) {\n    var toAdd;\n    var toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    var classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nexport { SplitPane as ion_split_pane };\n"],"sourceRoot":""}